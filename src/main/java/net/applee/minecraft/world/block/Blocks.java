package net.applee.minecraft.world.block;

import net.applee.minecraft.enums.DyeColor;
import net.applee.minecraft.utils.registry.Registry;
import net.applee.minecraft.world.block.blocks.*;

public class Blocks {
    public static final Block AIR = register("air", new AirBlock(BlockSettings.of(Material.AIR).noCollision().air()));
    public static final Block STONE = register("stone", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block GRANITE = register("granite", new Block(BlockSettings.of(Material.STONE, MapColor.DIRT_BROWN).requiresTool().strength(1.5f, 6.0f)));
    public static final Block POLISHED_GRANITE = register("polished_granite", new Block(BlockSettings.of(Material.STONE, MapColor.DIRT_BROWN).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DIORITE = register("diorite", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block POLISHED_DIORITE = register("polished_diorite", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block ANDESITE = register("andesite", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block POLISHED_ANDESITE = register("polished_andesite", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block GRASS_BLOCK = register("grass_block", new Block(BlockSettings.of(Material.SOLID_ORGANIC).ticksRandomly().strength(0.6f)));
    public static final Block DIRT = register("dirt", new Block(BlockSettings.of(Material.SOIL, MapColor.DIRT_BROWN).strength(0.5f)));
    public static final Block COARSE_DIRT = register("coarse_dirt", new Block(BlockSettings.of(Material.SOIL, MapColor.DIRT_BROWN).strength(0.5f)));
    public static final Block PODZOL = register("podzol", new Block(BlockSettings.of(Material.SOIL, MapColor.SPRUCE_BROWN).strength(0.5f)));
    public static final Block COBBLESTONE = register("cobblestone", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block OAK_PLANKS = register("oak_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.OAK_TAN).strength(2.0f, 3.0f)));
    public static final Block SPRUCE_PLANKS = register("spruce_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(2.0f, 3.0f)));
    public static final Block BIRCH_PLANKS = register("birch_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).strength(2.0f, 3.0f)));
    public static final Block JUNGLE_PLANKS = register("jungle_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(2.0f, 3.0f)));
    public static final Block ACACIA_PLANKS = register("acacia_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.ORANGE).strength(2.0f, 3.0f)));
    public static final Block DARK_OAK_PLANKS = register("dark_oak_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.BROWN).strength(2.0f, 3.0f)));
    public static final Block MANGROVE_PLANKS = register("mangrove_planks", new Block(BlockSettings.of(Material.WOOD, MapColor.RED).strength(2.0f, 3.0f)));
    public static final Block OAK_SAPLING = register("oak_sapling", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block SPRUCE_SAPLING = register("spruce_sapling", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block BIRCH_SAPLING = register("birch_sapling", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block JUNGLE_SAPLING = register("jungle_sapling", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block ACACIA_SAPLING = register("acacia_sapling", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block DARK_OAK_SAPLING = register("dark_oak_sapling", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block MANGROVE_PROPAGULE = register("mangrove_propagule", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block BEDROCK = register("bedrock", new Block(BlockSettings.of(Material.STONE).strength(-1.0f, 3600000.0f)));
    public static final Block WATER = register("water", new Block(BlockSettings.of(Material.WATER).noCollision().strength(100.0f)));
    public static final Block LAVA = register("lava", new Block(BlockSettings.of(Material.LAVA).noCollision().ticksRandomly().strength(100.0f).luminance(15)));
    public static final Block SAND = register("sand", new Block(BlockSettings.of(Material.AGGREGATE, MapColor.PALE_YELLOW).strength(0.5f)));
    public static final Block RED_SAND = register("red_sand", new Block(BlockSettings.of(Material.AGGREGATE, MapColor.ORANGE).strength(0.5f)));
    public static final Block GRAVEL = register("gravel", new Block(BlockSettings.of(Material.AGGREGATE, MapColor.STONE_GRAY).strength(0.6f)));
    public static final Block GOLD_ORE = register("gold_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_GOLD_ORE = register("deepslate_gold_ore", new Block(BlockSettings.copy(GOLD_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block IRON_ORE = register("iron_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_IRON_ORE = register("deepslate_iron_ore", new Block(BlockSettings.copy(IRON_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block COAL_ORE = register("coal_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_COAL_ORE = register("deepslate_coal_ore", new Block(BlockSettings.copy(COAL_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block NETHER_GOLD_ORE = register("nether_gold_ore", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(3.0f, 3.0f)));
    public static final Block OAK_LOG = register("oak_log", createLogBlock(MapColor.OAK_TAN, MapColor.SPRUCE_BROWN));
    public static final Block SPRUCE_LOG = register("spruce_log", createLogBlock(MapColor.SPRUCE_BROWN, MapColor.BROWN));
    public static final Block BIRCH_LOG = register("birch_log", createLogBlock(MapColor.PALE_YELLOW, MapColor.OFF_WHITE));
    public static final Block JUNGLE_LOG = register("jungle_log", createLogBlock(MapColor.DIRT_BROWN, MapColor.SPRUCE_BROWN));
    public static final Block ACACIA_LOG = register("acacia_log", createLogBlock(MapColor.ORANGE, MapColor.STONE_GRAY));
    public static final Block DARK_OAK_LOG = register("dark_oak_log", createLogBlock(MapColor.BROWN, MapColor.BROWN));
    public static final Block MANGROVE_LOG = register("mangrove_log", createLogBlock(MapColor.RED, MapColor.SPRUCE_BROWN));
    public static final Block MANGROVE_ROOTS = register("mangrove_roots", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(0.7f).ticksRandomly().nonOpaque().nonOpaque()));
    public static final Block MUDDY_MANGROVE_ROOTS = register("muddy_mangrove_roots", new Block(BlockSettings.of(Material.SOIL, MapColor.SPRUCE_BROWN).strength(0.7f)));
    public static final Block STRIPPED_SPRUCE_LOG = register("stripped_spruce_log", createLogBlock(MapColor.SPRUCE_BROWN, MapColor.SPRUCE_BROWN));
    public static final Block STRIPPED_BIRCH_LOG = register("stripped_birch_log", createLogBlock(MapColor.PALE_YELLOW, MapColor.PALE_YELLOW));
    public static final Block STRIPPED_JUNGLE_LOG = register("stripped_jungle_log", createLogBlock(MapColor.DIRT_BROWN, MapColor.DIRT_BROWN));
    public static final Block STRIPPED_ACACIA_LOG = register("stripped_acacia_log", createLogBlock(MapColor.ORANGE, MapColor.ORANGE));
    public static final Block STRIPPED_DARK_OAK_LOG = register("stripped_dark_oak_log", createLogBlock(MapColor.BROWN, MapColor.BROWN));
    public static final Block STRIPPED_OAK_LOG = register("stripped_oak_log", createLogBlock(MapColor.OAK_TAN, MapColor.OAK_TAN));
    public static final Block STRIPPED_MANGROVE_LOG = register("stripped_mangrove_log", createLogBlock(MapColor.RED, MapColor.RED));
    public static final Block OAK_WOOD = register("oak_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.OAK_TAN).strength(2.0f)));
    public static final Block SPRUCE_WOOD = register("spruce_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(2.0f)));
    public static final Block BIRCH_WOOD = register("birch_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).strength(2.0f)));
    public static final Block JUNGLE_WOOD = register("jungle_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(2.0f)));
    public static final Block ACACIA_WOOD = register("acacia_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.GRAY).strength(2.0f)));
    public static final Block DARK_OAK_WOOD = register("dark_oak_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.BROWN).strength(2.0f)));
    public static final Block MANGROVE_WOOD = register("mangrove_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.RED).strength(2.0f)));
    public static final Block STRIPPED_OAK_WOOD = register("stripped_oak_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.OAK_TAN).strength(2.0f)));
    public static final Block STRIPPED_SPRUCE_WOOD = register("stripped_spruce_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(2.0f)));
    public static final Block STRIPPED_BIRCH_WOOD = register("stripped_birch_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).strength(2.0f)));
    public static final Block STRIPPED_JUNGLE_WOOD = register("stripped_jungle_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(2.0f)));
    public static final Block STRIPPED_ACACIA_WOOD = register("stripped_acacia_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.ORANGE).strength(2.0f)));
    public static final Block STRIPPED_DARK_OAK_WOOD = register("stripped_dark_oak_wood", new Block(BlockSettings.of(Material.WOOD, MapColor.BROWN).strength(2.0f)));
    public static final Block STRIPPED_MANGROVE_WOOD = register("stripped_mangrove_wood", createLogBlock(MapColor.RED, MapColor.RED));
    public static final Block OAK_LEAVES = register("oak_leaves", createLeavesBlock());
    public static final Block SPRUCE_LEAVES = register("spruce_leaves", createLeavesBlock());
    public static final Block BIRCH_LEAVES = register("birch_leaves", createLeavesBlock());
    public static final Block JUNGLE_LEAVES = register("jungle_leaves", createLeavesBlock());
    public static final Block ACACIA_LEAVES = register("acacia_leaves", createLeavesBlock());
    public static final Block DARK_OAK_LEAVES = register("dark_oak_leaves", createLeavesBlock());
    public static final Block MANGROVE_LEAVES = register("mangrove_leaves", new Block(BlockSettings.of(Material.LEAVES).strength(0.2f).ticksRandomly().nonOpaque()));
    public static final Block AZALEA_LEAVES = register("azalea_leaves", createLeavesBlock());
    public static final Block FLOWERING_AZALEA_LEAVES = register("flowering_azalea_leaves", createLeavesBlock());
    public static final Block SPONGE = register("sponge", new Block(BlockSettings.of(Material.SPONGE).strength(0.6f)));
    public static final Block WET_SPONGE = register("wet_sponge", new Block(BlockSettings.of(Material.SPONGE).strength(0.6f)));
    public static final Block GLASS = register("glass", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block LAPIS_ORE = register("lapis_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_LAPIS_ORE = register("deepslate_lapis_ore", new Block(BlockSettings.copy(LAPIS_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block LAPIS_BLOCK = register("lapis_block", new Block(BlockSettings.of(Material.METAL, MapColor.LAPIS_BLUE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DISPENSER = register("dispenser", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.5f)));
    public static final Block SANDSTONE = register("sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(0.8f)));
    public static final Block CHISELED_SANDSTONE = register("chiseled_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(0.8f)));
    public static final Block CUT_SANDSTONE = register("cut_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(0.8f)));
    public static final Block NOTE_BLOCK = register("note_block", new Block(BlockSettings.of(Material.WOOD).strength(0.8f)));
    public static final Block WHITE_BED = register("white_bed", Blocks.createBedBlock(DyeColor.WHITE));
    public static final Block ORANGE_BED = register("orange_bed", Blocks.createBedBlock(DyeColor.ORANGE));
    public static final Block MAGENTA_BED = register("magenta_bed", Blocks.createBedBlock(DyeColor.MAGENTA));
    public static final Block LIGHT_BLUE_BED = register("light_blue_bed", Blocks.createBedBlock(DyeColor.LIGHT_BLUE));
    public static final Block YELLOW_BED = register("yellow_bed", Blocks.createBedBlock(DyeColor.YELLOW));
    public static final Block LIME_BED = register("lime_bed", Blocks.createBedBlock(DyeColor.LIME));
    public static final Block PINK_BED = register("pink_bed", Blocks.createBedBlock(DyeColor.PINK));
    public static final Block GRAY_BED = register("gray_bed", Blocks.createBedBlock(DyeColor.GRAY));
    public static final Block LIGHT_GRAY_BED = register("light_gray_bed", Blocks.createBedBlock(DyeColor.LIGHT_GRAY));
    public static final Block CYAN_BED = register("cyan_bed", Blocks.createBedBlock(DyeColor.CYAN));
    public static final Block PURPLE_BED = register("purple_bed", Blocks.createBedBlock(DyeColor.PURPLE));
    public static final Block BLUE_BED = register("blue_bed", Blocks.createBedBlock(DyeColor.BLUE));
    public static final Block BROWN_BED = register("brown_bed", Blocks.createBedBlock(DyeColor.BROWN));
    public static final Block GREEN_BED = register("green_bed", Blocks.createBedBlock(DyeColor.GREEN));
    public static final Block RED_BED = register("red_bed", Blocks.createBedBlock(DyeColor.RED));
    public static final Block BLACK_BED = register("black_bed", Blocks.createBedBlock(DyeColor.BLACK));
    public static final Block POWERED_RAIL = register("powered_rail", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.7f)));
    public static final Block DETECTOR_RAIL = register("detector_rail", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.7f)));
    public static final Block STICKY_PISTON = register("sticky_piston", Blocks.createPistonBlock(true));
    public static final Block COBWEB = register("cobweb", new Block(BlockSettings.of(Material.COBWEB).noCollision().requiresTool().strength(4.0f)));
    public static final Block GRASS = register("grass", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block FERN = register("fern", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block DEAD_BUSH = register("dead_bush", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT, MapColor.OAK_TAN).noCollision().breakInstantly()));
    public static final Block SEAGRASS = register("seagrass", new Block(BlockSettings.of(Material.REPLACEABLE_UNDERWATER_PLANT).noCollision().breakInstantly()));
    public static final Block TALL_SEAGRASS = register("tall_seagrass", new Block(BlockSettings.of(Material.REPLACEABLE_UNDERWATER_PLANT).noCollision().breakInstantly()));
    public static final Block PISTON = register("piston", Blocks.createPistonBlock(false));
    public static final Block PISTON_HEAD = register("piston_head", new Block(BlockSettings.of(Material.PISTON).strength(1.5f)));
    public static final Block WHITE_WOOL = register("white_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.WHITE).strength(0.8f)));
    public static final Block ORANGE_WOOL = register("orange_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.ORANGE).strength(0.8f)));
    public static final Block MAGENTA_WOOL = register("magenta_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.MAGENTA).strength(0.8f)));
    public static final Block LIGHT_BLUE_WOOL = register("light_blue_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.LIGHT_BLUE).strength(0.8f)));
    public static final Block YELLOW_WOOL = register("yellow_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.YELLOW).strength(0.8f)));
    public static final Block LIME_WOOL = register("lime_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.LIME).strength(0.8f)));
    public static final Block PINK_WOOL = register("pink_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.PINK).strength(0.8f)));
    public static final Block GRAY_WOOL = register("gray_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.GRAY).strength(0.8f)));
    public static final Block LIGHT_GRAY_WOOL = register("light_gray_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.LIGHT_GRAY).strength(0.8f)));
    public static final Block CYAN_WOOL = register("cyan_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.CYAN).strength(0.8f)));
    public static final Block PURPLE_WOOL = register("purple_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.PURPLE).strength(0.8f)));
    public static final Block BLUE_WOOL = register("blue_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.BLUE).strength(0.8f)));
    public static final Block BROWN_WOOL = register("brown_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.BROWN).strength(0.8f)));
    public static final Block GREEN_WOOL = register("green_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.GREEN).strength(0.8f)));
    public static final Block RED_WOOL = register("red_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.RED).strength(0.8f)));
    public static final Block BLACK_WOOL = register("black_wool", new Block(BlockSettings.of(Material.WOOL, MapColor.BLACK).strength(0.8f)));
    public static final Block MOVING_PISTON = register("moving_piston", new Block(BlockSettings.of(Material.PISTON).strength(-1.0f).dynamicBounds().nonOpaque()));
    public static final Block DANDELION = register("dandelion", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block POPPY = register("poppy", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block BLUE_ORCHID = register("blue_orchid", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block ALLIUM = register("allium", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block AZURE_BLUET = register("azure_bluet", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block RED_TULIP = register("red_tulip", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block ORANGE_TULIP = register("orange_tulip", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block WHITE_TULIP = register("white_tulip", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block PINK_TULIP = register("pink_tulip", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block OXEYE_DAISY = register("oxeye_daisy", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block CORNFLOWER = register("cornflower", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block WITHER_ROSE = register("wither_rose", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block LILY_OF_THE_VALLEY = register("lily_of_the_valley", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block BROWN_MUSHROOM = register("brown_mushroom", new Block(BlockSettings.of(Material.PLANT, MapColor.BROWN).noCollision().ticksRandomly().breakInstantly().luminance(1)));
    public static final Block RED_MUSHROOM = register("red_mushroom", new Block(BlockSettings.of(Material.PLANT, MapColor.RED).noCollision().ticksRandomly().breakInstantly()));
    public static final Block GOLD_BLOCK = register("gold_block", new Block(BlockSettings.of(Material.METAL, MapColor.GOLD).requiresTool().strength(3.0f, 6.0f)));
    public static final Block IRON_BLOCK = register("iron_block", new Block(BlockSettings.of(Material.METAL, MapColor.IRON_GRAY).requiresTool().strength(5.0f, 6.0f)));
    public static final Block BRICKS = register("bricks", new Block(BlockSettings.of(Material.STONE, MapColor.RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block TNT = register("tnt", new Block(BlockSettings.of(Material.TNT).breakInstantly()));
    public static final Block BOOKSHELF = register("bookshelf", new Block(BlockSettings.of(Material.WOOD).strength(1.5f)));
    public static final Block MOSSY_COBBLESTONE = register("mossy_cobblestone", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block OBSIDIAN = register("obsidian", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(50.0f, 1200.0f)));
    public static final Block TORCH = register("torch", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly().luminance(14)));
    public static final Block WALL_TORCH = register("wall_torch", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly().luminance(14).dropsLike(TORCH)));
    public static final Block FIRE = register("fire", new Block(BlockSettings.of(Material.FIRE, MapColor.BRIGHT_RED).noCollision().breakInstantly().luminance(15)));
    public static final Block SOUL_FIRE = register("soul_fire", new Block(BlockSettings.of(Material.FIRE, MapColor.LIGHT_BLUE).noCollision().breakInstantly().luminance(10)));
    public static final Block SPAWNER = register("spawner", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(5.0f).nonOpaque()));
    public static final Block OAK_STAIRS = register("oak_stairs", new Block(BlockSettings.copy(OAK_PLANKS)));
    public static final Block CHEST = register("chest", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block REDSTONE_WIRE = register("redstone_wire", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly()));
    public static final Block DIAMOND_ORE = register("diamond_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_DIAMOND_ORE = register("deepslate_diamond_ore", new Block(BlockSettings.copy(DIAMOND_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block DIAMOND_BLOCK = register("diamond_block", new Block(BlockSettings.of(Material.METAL, MapColor.DIAMOND_BLUE).requiresTool().strength(5.0f, 6.0f)));
    public static final Block CRAFTING_TABLE = register("crafting_table", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block WHEAT = register("wheat", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block FARMLAND = register("farmland", new Block(BlockSettings.of(Material.SOIL).ticksRandomly().strength(0.6f)));
    public static final Block FURNACE = register("furnace", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.5f).luminance(13)));
    public static final Block OAK_SIGN = register("oak_sign", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block SPRUCE_SIGN = register("spruce_sign", new Block(BlockSettings.of(Material.WOOD, SPRUCE_LOG.getSettings().getMapColor()).noCollision().strength(1.0f)));
    public static final Block SPRUCE_WALL_SIGN = register("spruce_wall_sign", new Block(BlockSettings.of(Material.WOOD, SPRUCE_LOG.getSettings().getMapColor()).noCollision().strength(1.0f).dropsLike(SPRUCE_SIGN)));
    public static final Block BIRCH_SIGN = register("birch_sign", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).noCollision().strength(1.0f)));
    public static final Block ACACIA_SIGN = register("acacia_sign", new Block(BlockSettings.of(Material.WOOD, MapColor.ORANGE).noCollision().strength(1.0f)));
    public static final Block JUNGLE_SIGN = register("jungle_sign", new Block(BlockSettings.of(Material.WOOD, JUNGLE_LOG.getSettings().getMapColor()).noCollision().strength(1.0f)));
    public static final Block JUNGLE_WALL_SIGN = register("jungle_wall_sign", new Block(BlockSettings.of(Material.WOOD, JUNGLE_LOG.getSettings().getMapColor()).noCollision().strength(1.0f).dropsLike(JUNGLE_SIGN)));
    public static final Block DARK_OAK_SIGN = register("dark_oak_sign", new Block(BlockSettings.of(Material.WOOD, DARK_OAK_LOG.getSettings().getMapColor()).noCollision().strength(1.0f)));
    public static final Block DARK_OAK_WALL_SIGN = register("dark_oak_wall_sign", new Block(BlockSettings.of(Material.WOOD, DARK_OAK_LOG.getSettings().getMapColor()).noCollision().strength(1.0f).dropsLike(DARK_OAK_SIGN)));
    public static final Block MANGROVE_SIGN = register("mangrove_sign", new Block(BlockSettings.of(Material.WOOD, MANGROVE_LOG.getSettings().getMapColor()).noCollision().strength(1.0f)));
    public static final Block MANGROVE_WALL_SIGN = register("mangrove_wall_sign", new Block(BlockSettings.of(Material.WOOD, MANGROVE_LOG.getSettings().getMapColor()).noCollision().strength(1.0f).dropsLike(MANGROVE_SIGN)));
    public static final Block OAK_DOOR = register("oak_door", new Block(BlockSettings.of(Material.WOOD, OAK_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block LADDER = register("ladder", new Block(BlockSettings.of(Material.DECORATION).strength(0.4f).nonOpaque()));
    public static final Block RAIL = register("rail", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.7f)));
    public static final Block COBBLESTONE_STAIRS = register("cobblestone_stairs", new Block(BlockSettings.copy(COBBLESTONE)));
    public static final Block OAK_WALL_SIGN = register("oak_wall_sign", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(OAK_SIGN)));
    public static final Block BIRCH_WALL_SIGN = register("birch_wall_sign", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).noCollision().strength(1.0f).dropsLike(BIRCH_SIGN)));
    public static final Block ACACIA_WALL_SIGN = register("acacia_wall_sign", new Block(BlockSettings.of(Material.WOOD, MapColor.ORANGE).noCollision().strength(1.0f).dropsLike(ACACIA_SIGN)));
    public static final Block LEVER = register("lever", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block STONE_PRESSURE_PLATE = register("stone_pressure_plate", new Block(BlockSettings.of(Material.STONE).requiresTool().noCollision().strength(0.5f)));
    public static final Block IRON_DOOR = register("iron_door", new Block(BlockSettings.of(Material.METAL, MapColor.IRON_GRAY).requiresTool().strength(5.0f).nonOpaque()));
    public static final Block OAK_PRESSURE_PLATE = register("oak_pressure_plate", new Block(BlockSettings.of(Material.WOOD, OAK_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block SPRUCE_PRESSURE_PLATE = register("spruce_pressure_plate", new Block(BlockSettings.of(Material.WOOD, SPRUCE_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block BIRCH_PRESSURE_PLATE = register("birch_pressure_plate", new Block(BlockSettings.of(Material.WOOD, BIRCH_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block JUNGLE_PRESSURE_PLATE = register("jungle_pressure_plate", new Block(BlockSettings.of(Material.WOOD, JUNGLE_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block ACACIA_PRESSURE_PLATE = register("acacia_pressure_plate", new Block(BlockSettings.of(Material.WOOD, ACACIA_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block DARK_OAK_PRESSURE_PLATE = register("dark_oak_pressure_plate", new Block(BlockSettings.of(Material.WOOD, DARK_OAK_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block MANGROVE_PRESSURE_PLATE = register("mangrove_pressure_plate", new Block(BlockSettings.of(Material.WOOD, MANGROVE_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block REDSTONE_ORE = register("redstone_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().ticksRandomly().luminance(9).strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_REDSTONE_ORE = register("deepslate_redstone_ore", new Block(BlockSettings.copy(REDSTONE_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block REDSTONE_TORCH = register("redstone_torch", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly().luminance(7)));
    public static final Block REDSTONE_WALL_TORCH = register("redstone_wall_torch", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly().luminance(7).dropsLike(REDSTONE_TORCH)));
    public static final Block STONE_BUTTON = register("stone_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block SNOW = register("snow", new Block(BlockSettings.of(Material.SNOW_LAYER).ticksRandomly().strength(0.1f).requiresTool()));
    public static final Block ICE = register("ice", new Block(BlockSettings.of(Material.ICE).slipperiness(0.98f).ticksRandomly().strength(0.5f).nonOpaque()));
    public static final Block SNOW_BLOCK = register("snow_block", new Block(BlockSettings.of(Material.SNOW_BLOCK).requiresTool().strength(0.2f)));
    public static final Block CACTUS = register("cactus", new Block(BlockSettings.of(Material.CACTUS).ticksRandomly().strength(0.4f)));
    public static final Block CLAY = register("clay", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT).strength(0.6f)));
    public static final Block SUGAR_CANE = register("sugar_cane", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block JUKEBOX = register("jukebox", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(2.0f, 6.0f)));
    public static final Block OAK_FENCE = register("oak_fence", new Block(BlockSettings.of(Material.WOOD, OAK_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block PUMPKIN = register("pumpkin", new Block(BlockSettings.of(Material.GOURD, MapColor.ORANGE).strength(1.0f)));
    public static final Block NETHERRACK = register("netherrack", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(0.4f)));
    public static final Block SOUL_SAND = register("soul_sand", new Block(BlockSettings.of(Material.AGGREGATE, MapColor.BROWN).strength(0.5f).velocityMultiplier(0.4f)));
    public static final Block SOUL_SOIL = register("soul_soil", new Block(BlockSettings.of(Material.SOIL, MapColor.BROWN).strength(0.5f)));
    public static final Block BASALT = register("basalt", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(1.25f, 4.2f)));
    public static final Block POLISHED_BASALT = register("polished_basalt", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(1.25f, 4.2f)));
    public static final Block SOUL_TORCH = register("soul_torch", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly().luminance(10)));
    public static final Block SOUL_WALL_TORCH = register("soul_wall_torch", new Block(BlockSettings.of(Material.DECORATION).noCollision().breakInstantly().luminance(10).dropsLike(SOUL_TORCH)));
    public static final Block GLOWSTONE = register("glowstone", new Block(BlockSettings.of(Material.GLASS, MapColor.PALE_YELLOW).strength(0.3f).luminance(15)));
    public static final Block NETHER_PORTAL = register("nether_portal", new Block(BlockSettings.of(Material.PORTAL).noCollision().ticksRandomly().strength(-1.0f).luminance(11)));
    public static final Block CARVED_PUMPKIN = register("carved_pumpkin", new Block(BlockSettings.of(Material.GOURD, MapColor.ORANGE).strength(1.0f)));
    public static final Block JACK_O_LANTERN = register("jack_o_lantern", new Block(BlockSettings.of(Material.GOURD, MapColor.ORANGE).strength(1.0f).luminance(15)));
    public static final Block CAKE = register("cake", new Block(BlockSettings.of(Material.CAKE).strength(0.5f)));
    public static final Block REPEATER = register("repeater", new Block(BlockSettings.of(Material.DECORATION).breakInstantly()));
    public static final Block WHITE_STAINED_GLASS = register("white_stained_glass", Blocks.createStainedGlassBlock(DyeColor.WHITE));
    public static final Block ORANGE_STAINED_GLASS = register("orange_stained_glass", Blocks.createStainedGlassBlock(DyeColor.ORANGE));
    public static final Block MAGENTA_STAINED_GLASS = register("magenta_stained_glass", Blocks.createStainedGlassBlock(DyeColor.MAGENTA));
    public static final Block LIGHT_BLUE_STAINED_GLASS = register("light_blue_stained_glass", Blocks.createStainedGlassBlock(DyeColor.LIGHT_BLUE));
    public static final Block YELLOW_STAINED_GLASS = register("yellow_stained_glass", Blocks.createStainedGlassBlock(DyeColor.YELLOW));
    public static final Block LIME_STAINED_GLASS = register("lime_stained_glass", Blocks.createStainedGlassBlock(DyeColor.LIME));
    public static final Block PINK_STAINED_GLASS = register("pink_stained_glass", Blocks.createStainedGlassBlock(DyeColor.PINK));
    public static final Block GRAY_STAINED_GLASS = register("gray_stained_glass", Blocks.createStainedGlassBlock(DyeColor.GRAY));
    public static final Block LIGHT_GRAY_STAINED_GLASS = register("light_gray_stained_glass", Blocks.createStainedGlassBlock(DyeColor.LIGHT_GRAY));
    public static final Block CYAN_STAINED_GLASS = register("cyan_stained_glass", Blocks.createStainedGlassBlock(DyeColor.CYAN));
    public static final Block PURPLE_STAINED_GLASS = register("purple_stained_glass", Blocks.createStainedGlassBlock(DyeColor.PURPLE));
    public static final Block BLUE_STAINED_GLASS = register("blue_stained_glass", Blocks.createStainedGlassBlock(DyeColor.BLUE));
    public static final Block BROWN_STAINED_GLASS = register("brown_stained_glass", Blocks.createStainedGlassBlock(DyeColor.BROWN));
    public static final Block GREEN_STAINED_GLASS = register("green_stained_glass", Blocks.createStainedGlassBlock(DyeColor.GREEN));
    public static final Block RED_STAINED_GLASS = register("red_stained_glass", Blocks.createStainedGlassBlock(DyeColor.RED));
    public static final Block BLACK_STAINED_GLASS = register("black_stained_glass", Blocks.createStainedGlassBlock(DyeColor.BLACK));
    public static final Block OAK_TRAPDOOR = register("oak_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.OAK_TAN).strength(3.0f).nonOpaque()));
    public static final Block SPRUCE_TRAPDOOR = register("spruce_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(3.0f).nonOpaque()));
    public static final Block BIRCH_TRAPDOOR = register("birch_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).strength(3.0f).nonOpaque()));
    public static final Block JUNGLE_TRAPDOOR = register("jungle_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(3.0f).nonOpaque()));
    public static final Block ACACIA_TRAPDOOR = register("acacia_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.ORANGE).strength(3.0f).nonOpaque()));
    public static final Block DARK_OAK_TRAPDOOR = register("dark_oak_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.BROWN).strength(3.0f).nonOpaque()));
    public static final Block MANGROVE_TRAPDOOR = register("mangrove_trapdoor", new Block(BlockSettings.of(Material.WOOD, MapColor.RED).strength(3.0f).nonOpaque()));
    public static final Block STONE_BRICKS = register("stone_bricks", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block MOSSY_STONE_BRICKS = register("mossy_stone_bricks", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block CRACKED_STONE_BRICKS = register("cracked_stone_bricks", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block CHISELED_STONE_BRICKS = register("chiseled_stone_bricks", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block PACKED_MUD = register("packed_mud", new Block(BlockSettings.copy(DIRT).strength(1.0f, 3.0f)));
    public static final Block MUD_BRICKS = register("mud_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_LIGHT_GRAY).requiresTool().strength(1.5f, 3.0f)));
    public static final Block INFESTED_STONE = register("infested_stone", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT)));
    public static final Block INFESTED_COBBLESTONE = register("infested_cobblestone", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT)));
    public static final Block INFESTED_STONE_BRICKS = register("infested_stone_bricks", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT)));
    public static final Block INFESTED_MOSSY_STONE_BRICKS = register("infested_mossy_stone_bricks", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT)));
    public static final Block INFESTED_CRACKED_STONE_BRICKS = register("infested_cracked_stone_bricks", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT)));
    public static final Block INFESTED_CHISELED_STONE_BRICKS = register("infested_chiseled_stone_bricks", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT)));
    public static final Block BROWN_MUSHROOM_BLOCK = register("brown_mushroom_block", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(0.2f)));
    public static final Block RED_MUSHROOM_BLOCK = register("red_mushroom_block", new Block(BlockSettings.of(Material.WOOD, MapColor.RED).strength(0.2f)));
    public static final Block MUSHROOM_STEM = register("mushroom_stem", new Block(BlockSettings.of(Material.WOOD, MapColor.WHITE_GRAY).strength(0.2f)));
    public static final Block IRON_BARS = register("iron_bars", new Block(BlockSettings.of(Material.METAL, MapColor.CLEAR).requiresTool().strength(5.0f, 6.0f).nonOpaque()));
    public static final Block CHAIN = register("chain", new Block(BlockSettings.of(Material.METAL, MapColor.CLEAR).requiresTool().strength(5.0f, 6.0f).nonOpaque()));
    public static final Block GLASS_PANE = register("glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block MELON = register("melon", new Block(BlockSettings.of(Material.GOURD, MapColor.LIME).strength(1.0f)));
    public static final Block ATTACHED_PUMPKIN_STEM = register("attached_pumpkin_stem", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block ATTACHED_MELON_STEM = register("attached_melon_stem", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block PUMPKIN_STEM = register("pumpkin_stem", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block MELON_STEM = register("melon_stem", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block VINE = register("vine", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().ticksRandomly().strength(0.2f)));
    public static final Block GLOW_LICHEN = register("glow_lichen", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT, MapColor.LICHEN_GREEN).noCollision().strength(0.2f).luminance(7)));
    public static final Block OAK_FENCE_GATE = register("oak_fence_gate", new Block(BlockSettings.of(Material.WOOD, OAK_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block BRICK_STAIRS = register("brick_stairs", new Block(BlockSettings.copy(BRICKS)));
    public static final Block STONE_BRICK_STAIRS = register("stone_brick_stairs", new Block(BlockSettings.copy(STONE_BRICKS)));
    public static final Block MUD_BRICK_STAIRS = register("mud_brick_stairs", new Block(BlockSettings.copy(MUD_BRICKS)));
    public static final Block MYCELIUM = register("mycelium", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.PURPLE).ticksRandomly().strength(0.6f)));
    public static final Block LILY_PAD = register("lily_pad", new Block(BlockSettings.of(Material.PLANT).breakInstantly().nonOpaque()));
    public static final Block NETHER_BRICKS = register("nether_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block NETHER_BRICK_FENCE = register("nether_brick_fence", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block NETHER_BRICK_STAIRS = register("nether_brick_stairs", new Block(BlockSettings.copy(NETHER_BRICKS)));
    public static final Block NETHER_WART = register("nether_wart", new Block(BlockSettings.of(Material.PLANT, MapColor.RED).noCollision().ticksRandomly()));
    public static final Block ENCHANTING_TABLE = register("enchanting_table", new Block(BlockSettings.of(Material.STONE, MapColor.RED).requiresTool().luminance(7).strength(5.0f, 1200.0f)));
    public static final Block BREWING_STAND = register("brewing_stand", new Block(BlockSettings.of(Material.METAL).requiresTool().strength(0.5f).luminance(1).nonOpaque()));
    public static final Block CAULDRON = register("cauldron", new Block(BlockSettings.of(Material.METAL, MapColor.STONE_GRAY).requiresTool().strength(2.0f).nonOpaque()));
    public static final Block WATER_CAULDRON = register("water_cauldron", new Block(BlockSettings.copy(CAULDRON)));
    public static final Block LAVA_CAULDRON = register("lava_cauldron", new Block(BlockSettings.copy(CAULDRON).luminance(15)));
    public static final Block POWDER_SNOW_CAULDRON = register("powder_snow_cauldron", new Block(BlockSettings.copy(CAULDRON)));
    public static final Block END_PORTAL = register("end_portal", new Block(BlockSettings.of(Material.PORTAL, MapColor.BLACK).noCollision().luminance(15).strength(-1.0f, 3600000.0f)));
    public static final Block END_PORTAL_FRAME = register("end_portal_frame", new Block(BlockSettings.of(Material.STONE, MapColor.GREEN).luminance(1).strength(-1.0f, 3600000.0f)));
    public static final Block END_STONE = register("end_stone", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(3.0f, 9.0f)));
    public static final Block DRAGON_EGG = register("dragon_egg", new Block(BlockSettings.of(Material.EGG, MapColor.BLACK).strength(3.0f, 9.0f).luminance(1).nonOpaque()));
    public static final Block REDSTONE_LAMP = register("redstone_lamp", new Block(BlockSettings.of(Material.REDSTONE_LAMP).luminance(15).strength(0.3f)));
    public static final Block COCOA = register("cocoa", new Block(BlockSettings.of(Material.PLANT).ticksRandomly().strength(0.2f, 3.0f).nonOpaque()));
    public static final Block SANDSTONE_STAIRS = register("sandstone_stairs", new Block(BlockSettings.copy(SANDSTONE)));
    public static final Block EMERALD_ORE = register("emerald_ore", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.0f, 3.0f)));
    public static final Block DEEPSLATE_EMERALD_ORE = register("deepslate_emerald_ore", new Block(BlockSettings.copy(EMERALD_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block ENDER_CHEST = register("ender_chest", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(22.5f, 600.0f).luminance(7)));
    public static final Block TRIPWIRE_HOOK = register("tripwire_hook", new Block(BlockSettings.of(Material.DECORATION).noCollision()));
    public static final Block TRIPWIRE = register("tripwire", new Block(BlockSettings.of(Material.DECORATION).noCollision()));
    public static final Block EMERALD_BLOCK = register("emerald_block", new Block(BlockSettings.of(Material.METAL, MapColor.EMERALD_GREEN).requiresTool().strength(5.0f, 6.0f)));
    public static final Block SPRUCE_STAIRS = register("spruce_stairs", new Block(BlockSettings.copy(SPRUCE_PLANKS)));
    public static final Block BIRCH_STAIRS = register("birch_stairs", new Block(BlockSettings.copy(BIRCH_PLANKS)));
    public static final Block JUNGLE_STAIRS = register("jungle_stairs", new Block(BlockSettings.copy(JUNGLE_PLANKS)));
    public static final Block COMMAND_BLOCK = register("command_block", new Block(BlockSettings.of(Material.METAL, MapColor.BROWN).requiresTool().strength(-1.0f, 3600000.0f)));
    public static final Block BEACON = register("beacon", new Block(BlockSettings.of(Material.GLASS, MapColor.DIAMOND_BLUE).strength(3.0f).luminance(15).nonOpaque()));
    public static final Block COBBLESTONE_WALL = register("cobblestone_wall", new Block(BlockSettings.copy(COBBLESTONE)));
    public static final Block MOSSY_COBBLESTONE_WALL = register("mossy_cobblestone_wall", new Block(BlockSettings.copy(COBBLESTONE)));
    public static final Block FLOWER_POT = register("flower_pot", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_OAK_SAPLING = register("potted_oak_sapling", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_SPRUCE_SAPLING = register("potted_spruce_sapling", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_BIRCH_SAPLING = register("potted_birch_sapling", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_JUNGLE_SAPLING = register("potted_jungle_sapling", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_ACACIA_SAPLING = register("potted_acacia_sapling", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_DARK_OAK_SAPLING = register("potted_dark_oak_sapling", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_MANGROVE_PROPAGULE = register("potted_mangrove_propagule", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_FERN = register("potted_fern", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_DANDELION = register("potted_dandelion", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_POPPY = register("potted_poppy", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_BLUE_ORCHID = register("potted_blue_orchid", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_ALLIUM = register("potted_allium", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_AZURE_BLUET = register("potted_azure_bluet", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_RED_TULIP = register("potted_red_tulip", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_ORANGE_TULIP = register("potted_orange_tulip", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_WHITE_TULIP = register("potted_white_tulip", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_PINK_TULIP = register("potted_pink_tulip", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_OXEYE_DAISY = register("potted_oxeye_daisy", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_CORNFLOWER = register("potted_cornflower", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_LILY_OF_THE_VALLEY = register("potted_lily_of_the_valley", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_WITHER_ROSE = register("potted_wither_rose", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_RED_MUSHROOM = register("potted_red_mushroom", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_BROWN_MUSHROOM = register("potted_brown_mushroom", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_DEAD_BUSH = register("potted_dead_bush", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_CACTUS = register("potted_cactus", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block CARROTS = register("carrots", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block POTATOES = register("potatoes", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block OAK_BUTTON = register("oak_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block SPRUCE_BUTTON = register("spruce_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block BIRCH_BUTTON = register("birch_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block JUNGLE_BUTTON = register("jungle_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block ACACIA_BUTTON = register("acacia_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block DARK_OAK_BUTTON = register("dark_oak_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block MANGROVE_BUTTON = register("mangrove_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block SKELETON_SKULL = register("skeleton_skull", new SkullBlock(SkullBlock.Type.SKELETON, BlockSettings.of(Material.DECORATION).strength(1.0f)));
    public static final Block SKELETON_WALL_SKULL = register("skeleton_wall_skull", new SkullBlock(SkullBlock.Type.SKELETON, BlockSettings.of(Material.DECORATION).strength(1.0f).dropsLike(SKELETON_SKULL)));
    public static final Block WITHER_SKELETON_SKULL = register("wither_skeleton_skull", new Block(BlockSettings.of(Material.DECORATION).strength(1.0f)));
    public static final Block WITHER_SKELETON_WALL_SKULL = register("wither_skeleton_wall_skull", new Block(BlockSettings.of(Material.DECORATION).strength(1.0f).dropsLike(WITHER_SKELETON_SKULL)));
    public static final Block ZOMBIE_HEAD = register("zombie_head", new SkullBlock(SkullBlock.Type.ZOMBIE, BlockSettings.of(Material.DECORATION).strength(1.0f)));
    public static final Block ZOMBIE_WALL_HEAD = register("zombie_wall_head", new SkullBlock(SkullBlock.Type.ZOMBIE, BlockSettings.of(Material.DECORATION).strength(1.0f).dropsLike(ZOMBIE_HEAD)));
    public static final Block PLAYER_HEAD = register("player_head", new Block(BlockSettings.of(Material.DECORATION).strength(1.0f)));
    public static final Block PLAYER_WALL_HEAD = register("player_wall_head", new Block(BlockSettings.of(Material.DECORATION).strength(1.0f).dropsLike(PLAYER_HEAD)));
    public static final Block CREEPER_HEAD = register("creeper_head", new SkullBlock(SkullBlock.Type.CREEPER, BlockSettings.of(Material.DECORATION).strength(1.0f)));
    public static final Block CREEPER_WALL_HEAD = register("creeper_wall_head", new SkullBlock(SkullBlock.Type.CREEPER, BlockSettings.of(Material.DECORATION).strength(1.0f).dropsLike(CREEPER_HEAD)));
    public static final Block DRAGON_HEAD = register("dragon_head", new SkullBlock(SkullBlock.Type.DRAGON, BlockSettings.of(Material.DECORATION).strength(1.0f)));
    public static final Block DRAGON_WALL_HEAD = register("dragon_wall_head", new SkullBlock(SkullBlock.Type.DRAGON, BlockSettings.of(Material.DECORATION).strength(1.0f).dropsLike(DRAGON_HEAD)));
    public static final Block ANVIL = register("anvil", new Block(BlockSettings.of(Material.REPAIR_STATION, MapColor.IRON_GRAY).requiresTool().strength(5.0f, 1200.0f)));
    public static final Block CHIPPED_ANVIL = register("chipped_anvil", new Block(BlockSettings.of(Material.REPAIR_STATION, MapColor.IRON_GRAY).requiresTool().strength(5.0f, 1200.0f)));
    public static final Block DAMAGED_ANVIL = register("damaged_anvil", new Block(BlockSettings.of(Material.REPAIR_STATION, MapColor.IRON_GRAY).requiresTool().strength(5.0f, 1200.0f)));
    public static final Block TRAPPED_CHEST = register("trapped_chest", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block LIGHT_WEIGHTED_PRESSURE_PLATE = register("light_weighted_pressure_plate", new Block(BlockSettings.of(Material.METAL, MapColor.GOLD).requiresTool().noCollision().strength(0.5f)));
    public static final Block HEAVY_WEIGHTED_PRESSURE_PLATE = register("heavy_weighted_pressure_plate", new Block(BlockSettings.of(Material.METAL).requiresTool().noCollision().strength(0.5f)));
    public static final Block COMPARATOR = register("comparator", new Block(BlockSettings.of(Material.DECORATION).breakInstantly()));
    public static final Block DAYLIGHT_DETECTOR = register("daylight_detector", new Block(BlockSettings.of(Material.WOOD).strength(0.2f)));
    public static final Block REDSTONE_BLOCK = register("redstone_block", new Block(BlockSettings.of(Material.METAL, MapColor.BRIGHT_RED).requiresTool().strength(5.0f, 6.0f)));
    public static final Block NETHER_QUARTZ_ORE = register("nether_quartz_ore", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(3.0f, 3.0f)));
    public static final Block HOPPER = register("hopper", new Block(BlockSettings.of(Material.METAL, MapColor.STONE_GRAY).requiresTool().strength(3.0f, 4.8f).nonOpaque()));
    public static final Block QUARTZ_BLOCK = register("quartz_block", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(0.8f)));
    public static final Block CHISELED_QUARTZ_BLOCK = register("chiseled_quartz_block", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(0.8f)));
    public static final Block QUARTZ_PILLAR = register("quartz_pillar", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(0.8f)));
    public static final Block QUARTZ_STAIRS = register("quartz_stairs", new Block(BlockSettings.copy(QUARTZ_BLOCK)));
    public static final Block ACTIVATOR_RAIL = register("activator_rail", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.7f)));
    public static final Block DROPPER = register("dropper", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.5f)));
    public static final Block WHITE_TERRACOTTA = register("white_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_WHITE).requiresTool().strength(1.25f, 4.2f)));
    public static final Block ORANGE_TERRACOTTA = register("orange_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_ORANGE).requiresTool().strength(1.25f, 4.2f)));
    public static final Block MAGENTA_TERRACOTTA = register("magenta_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_MAGENTA).requiresTool().strength(1.25f, 4.2f)));
    public static final Block LIGHT_BLUE_TERRACOTTA = register("light_blue_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_LIGHT_BLUE).requiresTool().strength(1.25f, 4.2f)));
    public static final Block YELLOW_TERRACOTTA = register("yellow_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_YELLOW).requiresTool().strength(1.25f, 4.2f)));
    public static final Block LIME_TERRACOTTA = register("lime_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_LIME).requiresTool().strength(1.25f, 4.2f)));
    public static final Block PINK_TERRACOTTA = register("pink_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_PINK).requiresTool().strength(1.25f, 4.2f)));
    public static final Block GRAY_TERRACOTTA = register("gray_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_GRAY).requiresTool().strength(1.25f, 4.2f)));
    public static final Block LIGHT_GRAY_TERRACOTTA = register("light_gray_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_LIGHT_GRAY).requiresTool().strength(1.25f, 4.2f)));
    public static final Block CYAN_TERRACOTTA = register("cyan_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_CYAN).requiresTool().strength(1.25f, 4.2f)));
    public static final Block PURPLE_TERRACOTTA = register("purple_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_PURPLE).requiresTool().strength(1.25f, 4.2f)));
    public static final Block BLUE_TERRACOTTA = register("blue_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_BLUE).requiresTool().strength(1.25f, 4.2f)));
    public static final Block BROWN_TERRACOTTA = register("brown_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_BROWN).requiresTool().strength(1.25f, 4.2f)));
    public static final Block GREEN_TERRACOTTA = register("green_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_GREEN).requiresTool().strength(1.25f, 4.2f)));
    public static final Block RED_TERRACOTTA = register("red_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_RED).requiresTool().strength(1.25f, 4.2f)));
    public static final Block BLACK_TERRACOTTA = register("black_terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_BLACK).requiresTool().strength(1.25f, 4.2f)));
    public static final Block WHITE_STAINED_GLASS_PANE = register("white_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block ORANGE_STAINED_GLASS_PANE = register("orange_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block MAGENTA_STAINED_GLASS_PANE = register("magenta_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block LIGHT_BLUE_STAINED_GLASS_PANE = register("light_blue_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block YELLOW_STAINED_GLASS_PANE = register("yellow_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block LIME_STAINED_GLASS_PANE = register("lime_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block PINK_STAINED_GLASS_PANE = register("pink_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block GRAY_STAINED_GLASS_PANE = register("gray_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block LIGHT_GRAY_STAINED_GLASS_PANE = register("light_gray_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block CYAN_STAINED_GLASS_PANE = register("cyan_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block PURPLE_STAINED_GLASS_PANE = register("purple_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block BLUE_STAINED_GLASS_PANE = register("blue_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block BROWN_STAINED_GLASS_PANE = register("brown_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block GREEN_STAINED_GLASS_PANE = register("green_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block RED_STAINED_GLASS_PANE = register("red_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block BLACK_STAINED_GLASS_PANE = register("black_stained_glass_pane", new Block(BlockSettings.of(Material.GLASS).strength(0.3f).nonOpaque()));
    public static final Block ACACIA_STAIRS = register("acacia_stairs", new Block(BlockSettings.copy(ACACIA_PLANKS)));
    public static final Block DARK_OAK_STAIRS = register("dark_oak_stairs", new Block(BlockSettings.copy(DARK_OAK_PLANKS)));
    public static final Block MANGROVE_STAIRS = register("mangrove_stairs", new Block(BlockSettings.copy(MANGROVE_PLANKS)));
    public static final Block SLIME_BLOCK = register("slime_block", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT, MapColor.PALE_GREEN).slipperiness(0.8f).nonOpaque()));
    public static final Block BARRIER = register("barrier", new Block(BlockSettings.of(Material.BARRIER).strength(-1.0f, 3600000.8f).nonOpaque()));
    public static final Block LIGHT = register("light", new Block(BlockSettings.of(Material.AIR).strength(-1.0f, 3600000.8f).nonOpaque().luminance(15)));
    public static final Block IRON_TRAPDOOR = register("iron_trapdoor", new Block(BlockSettings.of(Material.METAL).requiresTool().strength(5.0f).nonOpaque()));
    public static final Block PRISMARINE = register("prismarine", new Block(BlockSettings.of(Material.STONE, MapColor.CYAN).requiresTool().strength(1.5f, 6.0f)));
    public static final Block PRISMARINE_BRICKS = register("prismarine_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.DIAMOND_BLUE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DARK_PRISMARINE = register("dark_prismarine", new Block(BlockSettings.of(Material.STONE, MapColor.DIAMOND_BLUE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block PRISMARINE_STAIRS = register("prismarine_stairs", new Block(BlockSettings.copy(PRISMARINE)));
    public static final Block PRISMARINE_BRICK_STAIRS = register("prismarine_brick_stairs", new Block(BlockSettings.copy(PRISMARINE_BRICKS)));
    public static final Block DARK_PRISMARINE_STAIRS = register("dark_prismarine_stairs", new Block(BlockSettings.copy(DARK_PRISMARINE)));
    public static final Block PRISMARINE_SLAB = register("prismarine_slab", new Block(BlockSettings.of(Material.STONE, MapColor.CYAN).requiresTool().strength(1.5f, 6.0f)));
    public static final Block PRISMARINE_BRICK_SLAB = register("prismarine_brick_slab", new Block(BlockSettings.of(Material.STONE, MapColor.DIAMOND_BLUE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DARK_PRISMARINE_SLAB = register("dark_prismarine_slab", new Block(BlockSettings.of(Material.STONE, MapColor.DIAMOND_BLUE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block SEA_LANTERN = register("sea_lantern", new Block(BlockSettings.of(Material.GLASS, MapColor.OFF_WHITE).strength(0.3f).luminance(15)));
    public static final Block HAY_BLOCK = register("hay_block", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.YELLOW).strength(0.5f)));
    public static final Block WHITE_CARPET = register("white_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.WHITE).strength(0.1f)));
    public static final Block ORANGE_CARPET = register("orange_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.ORANGE).strength(0.1f)));
    public static final Block MAGENTA_CARPET = register("magenta_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.MAGENTA).strength(0.1f)));
    public static final Block LIGHT_BLUE_CARPET = register("light_blue_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.LIGHT_BLUE).strength(0.1f)));
    public static final Block YELLOW_CARPET = register("yellow_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.YELLOW).strength(0.1f)));
    public static final Block LIME_CARPET = register("lime_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.LIME).strength(0.1f)));
    public static final Block PINK_CARPET = register("pink_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.PINK).strength(0.1f)));
    public static final Block GRAY_CARPET = register("gray_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.GRAY).strength(0.1f)));
    public static final Block LIGHT_GRAY_CARPET = register("light_gray_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.LIGHT_GRAY).strength(0.1f)));
    public static final Block CYAN_CARPET = register("cyan_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.CYAN).strength(0.1f)));
    public static final Block PURPLE_CARPET = register("purple_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.PURPLE).strength(0.1f)));
    public static final Block BLUE_CARPET = register("blue_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.BLUE).strength(0.1f)));
    public static final Block BROWN_CARPET = register("brown_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.BROWN).strength(0.1f)));
    public static final Block GREEN_CARPET = register("green_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.GREEN).strength(0.1f)));
    public static final Block RED_CARPET = register("red_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.RED).strength(0.1f)));
    public static final Block BLACK_CARPET = register("black_carpet", new Block(BlockSettings.of(Material.CARPET, MapColor.BLACK).strength(0.1f)));
    public static final Block TERRACOTTA = register("terracotta", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(1.25f, 4.2f)));
    public static final Block COAL_BLOCK = register("coal_block", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(5.0f, 6.0f)));
    public static final Block PACKED_ICE = register("packed_ice", new Block(BlockSettings.of(Material.DENSE_ICE).slipperiness(0.98f).strength(0.5f)));
    public static final Block SUNFLOWER = register("sunflower", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block LILAC = register("lilac", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block ROSE_BUSH = register("rose_bush", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block PEONY = register("peony", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block TALL_GRASS = register("tall_grass", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block LARGE_FERN = register("large_fern", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly()));
    public static final Block WHITE_BANNER = register("white_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block ORANGE_BANNER = register("orange_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block MAGENTA_BANNER = register("magenta_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block LIGHT_BLUE_BANNER = register("light_blue_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block YELLOW_BANNER = register("yellow_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block LIME_BANNER = register("lime_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block PINK_BANNER = register("pink_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block GRAY_BANNER = register("gray_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block LIGHT_GRAY_BANNER = register("light_gray_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block CYAN_BANNER = register("cyan_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block PURPLE_BANNER = register("purple_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block BLUE_BANNER = register("blue_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block BROWN_BANNER = register("brown_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block GREEN_BANNER = register("green_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block RED_BANNER = register("red_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block BLACK_BANNER = register("black_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f)));
    public static final Block WHITE_WALL_BANNER = register("white_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(WHITE_BANNER)));
    public static final Block ORANGE_WALL_BANNER = register("orange_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(ORANGE_BANNER)));
    public static final Block MAGENTA_WALL_BANNER = register("magenta_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(MAGENTA_BANNER)));
    public static final Block LIGHT_BLUE_WALL_BANNER = register("light_blue_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(LIGHT_BLUE_BANNER)));
    public static final Block YELLOW_WALL_BANNER = register("yellow_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(YELLOW_BANNER)));
    public static final Block LIME_WALL_BANNER = register("lime_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(LIME_BANNER)));
    public static final Block PINK_WALL_BANNER = register("pink_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(PINK_BANNER)));
    public static final Block GRAY_WALL_BANNER = register("gray_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(GRAY_BANNER)));
    public static final Block LIGHT_GRAY_WALL_BANNER = register("light_gray_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(LIGHT_GRAY_BANNER)));
    public static final Block CYAN_WALL_BANNER = register("cyan_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(CYAN_BANNER)));
    public static final Block PURPLE_WALL_BANNER = register("purple_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(PURPLE_BANNER)));
    public static final Block BLUE_WALL_BANNER = register("blue_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(BLUE_BANNER)));
    public static final Block BROWN_WALL_BANNER = register("brown_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(BROWN_BANNER)));
    public static final Block GREEN_WALL_BANNER = register("green_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(GREEN_BANNER)));
    public static final Block RED_WALL_BANNER = register("red_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(RED_BANNER)));
    public static final Block BLACK_WALL_BANNER = register("black_wall_banner", new Block(BlockSettings.of(Material.WOOD).noCollision().strength(1.0f).dropsLike(BLACK_BANNER)));
    public static final Block RED_SANDSTONE = register("red_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(0.8f)));
    public static final Block CHISELED_RED_SANDSTONE = register("chiseled_red_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(0.8f)));
    public static final Block CUT_RED_SANDSTONE = register("cut_red_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(0.8f)));
    public static final Block RED_SANDSTONE_STAIRS = register("red_sandstone_stairs", new Block(BlockSettings.copy(RED_SANDSTONE)));
    public static final Block OAK_SLAB = register("oak_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.OAK_TAN).strength(2.0f, 3.0f)));
    public static final Block SPRUCE_SLAB = register("spruce_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(2.0f, 3.0f)));
    public static final Block BIRCH_SLAB = register("birch_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.PALE_YELLOW).strength(2.0f, 3.0f)));
    public static final Block JUNGLE_SLAB = register("jungle_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.DIRT_BROWN).strength(2.0f, 3.0f)));
    public static final Block ACACIA_SLAB = register("acacia_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.ORANGE).strength(2.0f, 3.0f)));
    public static final Block DARK_OAK_SLAB = register("dark_oak_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.BROWN).strength(2.0f, 3.0f)));
    public static final Block MANGROVE_SLAB = register("mangrove_slab", new Block(BlockSettings.of(Material.WOOD, MapColor.RED).strength(2.0f, 3.0f)));
    public static final Block STONE_SLAB = register("stone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SMOOTH_STONE_SLAB = register("smooth_stone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SANDSTONE_SLAB = register("sandstone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(2.0f, 6.0f)));
    public static final Block CUT_SANDSTONE_SLAB = register("cut_sandstone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(2.0f, 6.0f)));
    public static final Block PETRIFIED_OAK_SLAB = register("petrified_oak_slab", new Block(BlockSettings.of(Material.STONE, MapColor.OAK_TAN).requiresTool().strength(2.0f, 6.0f)));
    public static final Block COBBLESTONE_SLAB = register("cobblestone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(2.0f, 6.0f)));
    public static final Block BRICK_SLAB = register("brick_slab", new Block(BlockSettings.of(Material.STONE, MapColor.RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block STONE_BRICK_SLAB = register("stone_brick_slab", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(2.0f, 6.0f)));
    public static final Block MUD_BRICK_SLAB = register("mud_brick_slab", new Block(BlockSettings.of(Material.STONE, MapColor.BROWN).requiresTool().strength(1.5f, 3.0f)));
    public static final Block NETHER_BRICK_SLAB = register("nether_brick_slab", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block QUARTZ_SLAB = register("quartz_slab", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block RED_SANDSTONE_SLAB = register("red_sandstone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block CUT_RED_SANDSTONE_SLAB = register("cut_red_sandstone_slab", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block PURPUR_SLAB = register("purpur_slab", new Block(BlockSettings.of(Material.STONE, MapColor.MAGENTA).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SMOOTH_STONE = register("smooth_stone", new Block(BlockSettings.of(Material.STONE, MapColor.STONE_GRAY).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SMOOTH_SANDSTONE = register("smooth_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SMOOTH_QUARTZ = register("smooth_quartz", new Block(BlockSettings.of(Material.STONE, MapColor.OFF_WHITE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SMOOTH_RED_SANDSTONE = register("smooth_red_sandstone", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(2.0f, 6.0f)));
    public static final Block SPRUCE_FENCE_GATE = register("spruce_fence_gate", new Block(BlockSettings.of(Material.WOOD, SPRUCE_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block BIRCH_FENCE_GATE = register("birch_fence_gate", new Block(BlockSettings.of(Material.WOOD, BIRCH_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block JUNGLE_FENCE_GATE = register("jungle_fence_gate", new Block(BlockSettings.of(Material.WOOD, JUNGLE_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block ACACIA_FENCE_GATE = register("acacia_fence_gate", new Block(BlockSettings.of(Material.WOOD, ACACIA_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block DARK_OAK_FENCE_GATE = register("dark_oak_fence_gate", new Block(BlockSettings.of(Material.WOOD, DARK_OAK_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block MANGROVE_FENCE_GATE = register("mangrove_fence_gate", new Block(BlockSettings.of(Material.WOOD, MANGROVE_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block SPRUCE_FENCE = register("spruce_fence", new Block(BlockSettings.of(Material.WOOD, SPRUCE_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block BIRCH_FENCE = register("birch_fence", new Block(BlockSettings.of(Material.WOOD, BIRCH_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block JUNGLE_FENCE = register("jungle_fence", new Block(BlockSettings.of(Material.WOOD, JUNGLE_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block ACACIA_FENCE = register("acacia_fence", new Block(BlockSettings.of(Material.WOOD, ACACIA_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block DARK_OAK_FENCE = register("dark_oak_fence", new Block(BlockSettings.of(Material.WOOD, DARK_OAK_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block MANGROVE_FENCE = register("mangrove_fence", new Block(BlockSettings.of(Material.WOOD, MANGROVE_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block SPRUCE_DOOR = register("spruce_door", new Block(BlockSettings.of(Material.WOOD, SPRUCE_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block BIRCH_DOOR = register("birch_door", new Block(BlockSettings.of(Material.WOOD, BIRCH_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block JUNGLE_DOOR = register("jungle_door", new Block(BlockSettings.of(Material.WOOD, JUNGLE_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block ACACIA_DOOR = register("acacia_door", new Block(BlockSettings.of(Material.WOOD, ACACIA_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block DARK_OAK_DOOR = register("dark_oak_door", new Block(BlockSettings.of(Material.WOOD, DARK_OAK_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block MANGROVE_DOOR = register("mangrove_door", new Block(BlockSettings.of(Material.WOOD, MANGROVE_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block END_ROD = register("end_rod", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().luminance(14).nonOpaque()));
    public static final Block CHORUS_PLANT = register("chorus_plant", new Block(BlockSettings.of(Material.PLANT, MapColor.PURPLE).strength(0.4f).nonOpaque()));
    public static final Block CHORUS_FLOWER = register("chorus_flower", new Block(BlockSettings.of(Material.PLANT, MapColor.PURPLE).ticksRandomly().strength(0.4f).nonOpaque()));
    public static final Block PURPUR_BLOCK = register("purpur_block", new Block(BlockSettings.of(Material.STONE, MapColor.MAGENTA).requiresTool().strength(1.5f, 6.0f)));
    public static final Block PURPUR_PILLAR = register("purpur_pillar", new Block(BlockSettings.of(Material.STONE, MapColor.MAGENTA).requiresTool().strength(1.5f, 6.0f)));
    public static final Block PURPUR_STAIRS = register("purpur_stairs", new Block(BlockSettings.copy(PURPUR_BLOCK)));
    public static final Block END_STONE_BRICKS = register("end_stone_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(3.0f, 9.0f)));
    public static final Block BEETROOTS = register("beetroots", new Block(BlockSettings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block DIRT_PATH = register("dirt_path", new Block(BlockSettings.of(Material.SOIL).strength(0.65f)));
    public static final Block END_GATEWAY = register("end_gateway", new Block(BlockSettings.of(Material.PORTAL, MapColor.BLACK).noCollision().luminance(15).strength(-1.0f, 3600000.0f)));
    public static final Block REPEATING_COMMAND_BLOCK = register("repeating_command_block", new Block(BlockSettings.of(Material.METAL, MapColor.PURPLE).requiresTool().strength(-1.0f, 3600000.0f)));
    public static final Block CHAIN_COMMAND_BLOCK = register("chain_command_block", new Block(BlockSettings.of(Material.METAL, MapColor.GREEN).requiresTool().strength(-1.0f, 3600000.0f)));
    public static final Block FROSTED_ICE = register("frosted_ice", new Block(BlockSettings.of(Material.ICE).slipperiness(0.98f).ticksRandomly().strength(0.5f).nonOpaque()));
    public static final Block MAGMA_BLOCK = register("magma_block", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().luminance(3).ticksRandomly().strength(0.5f)));
    public static final Block NETHER_WART_BLOCK = register("nether_wart_block", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.RED).strength(1.0f)));
    public static final Block RED_NETHER_BRICKS = register("red_nether_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block BONE_BLOCK = register("bone_block", new Block(BlockSettings.of(Material.STONE, MapColor.PALE_YELLOW).requiresTool().strength(2.0f)));
    public static final Block STRUCTURE_VOID = register("structure_void", new Block(BlockSettings.of(Material.STRUCTURE_VOID).noCollision()));
    public static final Block OBSERVER = register("observer", new Block(BlockSettings.of(Material.STONE).strength(3.0f).requiresTool()));
    public static final Block SHULKER_BOX = register("shulker_box", createShulkerBoxBlock(null, BlockSettings.of(Material.SHULKER_BOX)));
    public static final Block WHITE_SHULKER_BOX = register("white_shulker_box", createShulkerBoxBlock(DyeColor.WHITE, BlockSettings.of(Material.SHULKER_BOX, MapColor.WHITE)));
    public static final Block ORANGE_SHULKER_BOX = register("orange_shulker_box", createShulkerBoxBlock(DyeColor.ORANGE, BlockSettings.of(Material.SHULKER_BOX, MapColor.ORANGE)));
    public static final Block MAGENTA_SHULKER_BOX = register("magenta_shulker_box", createShulkerBoxBlock(DyeColor.MAGENTA, BlockSettings.of(Material.SHULKER_BOX, MapColor.MAGENTA)));
    public static final Block LIGHT_BLUE_SHULKER_BOX = register("light_blue_shulker_box", createShulkerBoxBlock(DyeColor.LIGHT_BLUE, BlockSettings.of(Material.SHULKER_BOX, MapColor.LIGHT_BLUE)));
    public static final Block YELLOW_SHULKER_BOX = register("yellow_shulker_box", createShulkerBoxBlock(DyeColor.YELLOW, BlockSettings.of(Material.SHULKER_BOX, MapColor.YELLOW)));
    public static final Block LIME_SHULKER_BOX = register("lime_shulker_box", createShulkerBoxBlock(DyeColor.LIME, BlockSettings.of(Material.SHULKER_BOX, MapColor.LIME)));
    public static final Block PINK_SHULKER_BOX = register("pink_shulker_box", createShulkerBoxBlock(DyeColor.PINK, BlockSettings.of(Material.SHULKER_BOX, MapColor.PINK)));
    public static final Block GRAY_SHULKER_BOX = register("gray_shulker_box", createShulkerBoxBlock(DyeColor.GRAY, BlockSettings.of(Material.SHULKER_BOX, MapColor.GRAY)));
    public static final Block LIGHT_GRAY_SHULKER_BOX = register("light_gray_shulker_box", createShulkerBoxBlock(DyeColor.LIGHT_GRAY, BlockSettings.of(Material.SHULKER_BOX, MapColor.LIGHT_GRAY)));
    public static final Block CYAN_SHULKER_BOX = register("cyan_shulker_box", createShulkerBoxBlock(DyeColor.CYAN, BlockSettings.of(Material.SHULKER_BOX, MapColor.CYAN)));
    public static final Block PURPLE_SHULKER_BOX = register("purple_shulker_box", createShulkerBoxBlock(DyeColor.PURPLE, BlockSettings.of(Material.SHULKER_BOX, MapColor.TERRACOTTA_PURPLE)));
    public static final Block BLUE_SHULKER_BOX = register("blue_shulker_box", createShulkerBoxBlock(DyeColor.BLUE, BlockSettings.of(Material.SHULKER_BOX, MapColor.BLUE)));
    public static final Block BROWN_SHULKER_BOX = register("brown_shulker_box", createShulkerBoxBlock(DyeColor.BROWN, BlockSettings.of(Material.SHULKER_BOX, MapColor.BROWN)));
    public static final Block GREEN_SHULKER_BOX = register("green_shulker_box", createShulkerBoxBlock(DyeColor.GREEN, BlockSettings.of(Material.SHULKER_BOX, MapColor.GREEN)));
    public static final Block RED_SHULKER_BOX = register("red_shulker_box", createShulkerBoxBlock(DyeColor.RED, BlockSettings.of(Material.SHULKER_BOX, MapColor.RED)));
    public static final Block BLACK_SHULKER_BOX = register("black_shulker_box", createShulkerBoxBlock(DyeColor.BLACK, BlockSettings.of(Material.SHULKER_BOX, MapColor.BLACK)));
    public static final Block WHITE_GLAZED_TERRACOTTA = register("white_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.WHITE).requiresTool().strength(1.4f)));
    public static final Block ORANGE_GLAZED_TERRACOTTA = register("orange_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.ORANGE).requiresTool().strength(1.4f)));
    public static final Block MAGENTA_GLAZED_TERRACOTTA = register("magenta_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.MAGENTA).requiresTool().strength(1.4f)));
    public static final Block LIGHT_BLUE_GLAZED_TERRACOTTA = register("light_blue_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.LIGHT_BLUE).requiresTool().strength(1.4f)));
    public static final Block YELLOW_GLAZED_TERRACOTTA = register("yellow_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.YELLOW).requiresTool().strength(1.4f)));
    public static final Block LIME_GLAZED_TERRACOTTA = register("lime_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.LIME).requiresTool().strength(1.4f)));
    public static final Block PINK_GLAZED_TERRACOTTA = register("pink_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.PINK).requiresTool().strength(1.4f)));
    public static final Block GRAY_GLAZED_TERRACOTTA = register("gray_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.GRAY).requiresTool().strength(1.4f)));
    public static final Block LIGHT_GRAY_GLAZED_TERRACOTTA = register("light_gray_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.LIGHT_GRAY).requiresTool().strength(1.4f)));
    public static final Block CYAN_GLAZED_TERRACOTTA = register("cyan_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.CYAN).requiresTool().strength(1.4f)));
    public static final Block PURPLE_GLAZED_TERRACOTTA = register("purple_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.PURPLE).requiresTool().strength(1.4f)));
    public static final Block BLUE_GLAZED_TERRACOTTA = register("blue_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.BLUE).requiresTool().strength(1.4f)));
    public static final Block BROWN_GLAZED_TERRACOTTA = register("brown_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.BROWN).requiresTool().strength(1.4f)));
    public static final Block GREEN_GLAZED_TERRACOTTA = register("green_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.GREEN).requiresTool().strength(1.4f)));
    public static final Block RED_GLAZED_TERRACOTTA = register("red_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.RED).requiresTool().strength(1.4f)));
    public static final Block BLACK_GLAZED_TERRACOTTA = register("black_glazed_terracotta", new Block(BlockSettings.of(Material.STONE, DyeColor.BLACK).requiresTool().strength(1.4f)));
    public static final Block WHITE_CONCRETE = register("white_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.WHITE).requiresTool().strength(1.8f)));
    public static final Block ORANGE_CONCRETE = register("orange_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.ORANGE).requiresTool().strength(1.8f)));
    public static final Block MAGENTA_CONCRETE = register("magenta_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.MAGENTA).requiresTool().strength(1.8f)));
    public static final Block LIGHT_BLUE_CONCRETE = register("light_blue_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.LIGHT_BLUE).requiresTool().strength(1.8f)));
    public static final Block YELLOW_CONCRETE = register("yellow_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.YELLOW).requiresTool().strength(1.8f)));
    public static final Block LIME_CONCRETE = register("lime_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.LIME).requiresTool().strength(1.8f)));
    public static final Block PINK_CONCRETE = register("pink_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.PINK).requiresTool().strength(1.8f)));
    public static final Block GRAY_CONCRETE = register("gray_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.GRAY).requiresTool().strength(1.8f)));
    public static final Block LIGHT_GRAY_CONCRETE = register("light_gray_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.LIGHT_GRAY).requiresTool().strength(1.8f)));
    public static final Block CYAN_CONCRETE = register("cyan_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.CYAN).requiresTool().strength(1.8f)));
    public static final Block PURPLE_CONCRETE = register("purple_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.PURPLE).requiresTool().strength(1.8f)));
    public static final Block BLUE_CONCRETE = register("blue_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.BLUE).requiresTool().strength(1.8f)));
    public static final Block BROWN_CONCRETE = register("brown_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.BROWN).requiresTool().strength(1.8f)));
    public static final Block GREEN_CONCRETE = register("green_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.GREEN).requiresTool().strength(1.8f)));
    public static final Block RED_CONCRETE = register("red_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.RED).requiresTool().strength(1.8f)));
    public static final Block BLACK_CONCRETE = register("black_concrete", new Block(BlockSettings.of(Material.STONE, DyeColor.BLACK).requiresTool().strength(1.8f)));
    public static final Block WHITE_CONCRETE_POWDER = register("white_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.WHITE).strength(0.5f)));
    public static final Block ORANGE_CONCRETE_POWDER = register("orange_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.ORANGE).strength(0.5f)));
    public static final Block MAGENTA_CONCRETE_POWDER = register("magenta_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.MAGENTA).strength(0.5f)));
    public static final Block LIGHT_BLUE_CONCRETE_POWDER = register("light_blue_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.LIGHT_BLUE).strength(0.5f)));
    public static final Block YELLOW_CONCRETE_POWDER = register("yellow_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.YELLOW).strength(0.5f)));
    public static final Block LIME_CONCRETE_POWDER = register("lime_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.LIME).strength(0.5f)));
    public static final Block PINK_CONCRETE_POWDER = register("pink_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.PINK).strength(0.5f)));
    public static final Block GRAY_CONCRETE_POWDER = register("gray_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.GRAY).strength(0.5f)));
    public static final Block LIGHT_GRAY_CONCRETE_POWDER = register("light_gray_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.LIGHT_GRAY).strength(0.5f)));
    public static final Block CYAN_CONCRETE_POWDER = register("cyan_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.CYAN).strength(0.5f)));
    public static final Block PURPLE_CONCRETE_POWDER = register("purple_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.PURPLE).strength(0.5f)));
    public static final Block BLUE_CONCRETE_POWDER = register("blue_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.BLUE).strength(0.5f)));
    public static final Block BROWN_CONCRETE_POWDER = register("brown_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.BROWN).strength(0.5f)));
    public static final Block GREEN_CONCRETE_POWDER = register("green_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.GREEN).strength(0.5f)));
    public static final Block RED_CONCRETE_POWDER = register("red_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.RED).strength(0.5f)));
    public static final Block BLACK_CONCRETE_POWDER = register("black_concrete_powder", new Block(BlockSettings.of(Material.AGGREGATE, DyeColor.BLACK).strength(0.5f)));
    public static final Block KELP = register("kelp", new Block(BlockSettings.of(Material.UNDERWATER_PLANT).noCollision().ticksRandomly().breakInstantly()));
    public static final Block KELP_PLANT = register("kelp_plant", new Block(BlockSettings.of(Material.UNDERWATER_PLANT).noCollision().breakInstantly()));
    public static final Block DRIED_KELP_BLOCK = register("dried_kelp_block", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.GREEN).strength(0.5f, 2.5f)));
    public static final Block TURTLE_EGG = register("turtle_egg", new Block(BlockSettings.of(Material.EGG, MapColor.PALE_YELLOW).strength(0.5f).ticksRandomly().nonOpaque()));
    public static final Block DEAD_TUBE_CORAL_BLOCK = register("dead_tube_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DEAD_BRAIN_CORAL_BLOCK = register("dead_brain_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DEAD_BUBBLE_CORAL_BLOCK = register("dead_bubble_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DEAD_FIRE_CORAL_BLOCK = register("dead_fire_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DEAD_HORN_CORAL_BLOCK = register("dead_horn_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block TUBE_CORAL_BLOCK = register("tube_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.BLUE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block BRAIN_CORAL_BLOCK = register("brain_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.PINK).requiresTool().strength(1.5f, 6.0f)));
    public static final Block BUBBLE_CORAL_BLOCK = register("bubble_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.PURPLE).requiresTool().strength(1.5f, 6.0f)));
    public static final Block FIRE_CORAL_BLOCK = register("fire_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.RED).requiresTool().strength(1.5f, 6.0f)));
    public static final Block HORN_CORAL_BLOCK = register("horn_coral_block", new Block(BlockSettings.of(Material.STONE, MapColor.YELLOW).requiresTool().strength(1.5f, 6.0f)));
    public static final Block DEAD_TUBE_CORAL = register("dead_tube_coral", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_BRAIN_CORAL = register("dead_brain_coral", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_BUBBLE_CORAL = register("dead_bubble_coral", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_FIRE_CORAL = register("dead_fire_coral", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_HORN_CORAL = register("dead_horn_coral", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block TUBE_CORAL = register("tube_coral", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.BLUE).noCollision().breakInstantly()));
    public static final Block BRAIN_CORAL = register("brain_coral", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.PINK).noCollision().breakInstantly()));
    public static final Block BUBBLE_CORAL = register("bubble_coral", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.PURPLE).noCollision().breakInstantly()));
    public static final Block FIRE_CORAL = register("fire_coral", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.RED).noCollision().breakInstantly()));
    public static final Block HORN_CORAL = register("horn_coral", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.YELLOW).noCollision().breakInstantly()));
    public static final Block DEAD_TUBE_CORAL_FAN = register("dead_tube_coral_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_BRAIN_CORAL_FAN = register("dead_brain_coral_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_BUBBLE_CORAL_FAN = register("dead_bubble_coral_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_FIRE_CORAL_FAN = register("dead_fire_coral_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block DEAD_HORN_CORAL_FAN = register("dead_horn_coral_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly()));
    public static final Block TUBE_CORAL_FAN = register("tube_coral_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.BLUE).noCollision().breakInstantly()));
    public static final Block BRAIN_CORAL_FAN = register("brain_coral_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.PINK).noCollision().breakInstantly()));
    public static final Block BUBBLE_CORAL_FAN = register("bubble_coral_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.PURPLE).noCollision().breakInstantly()));
    public static final Block FIRE_CORAL_FAN = register("fire_coral_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.RED).noCollision().breakInstantly()));
    public static final Block HORN_CORAL_FAN = register("horn_coral_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.YELLOW).noCollision().breakInstantly()));
    public static final Block DEAD_TUBE_CORAL_WALL_FAN = register("dead_tube_coral_wall_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly().dropsLike(DEAD_TUBE_CORAL_FAN)));
    public static final Block TUBE_CORAL_WALL_FAN = register("tube_coral_wall_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.BLUE).noCollision().breakInstantly().dropsLike(TUBE_CORAL_FAN)));
    public static final Block DEAD_BRAIN_CORAL_WALL_FAN = register("dead_brain_coral_wall_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly().dropsLike(DEAD_BRAIN_CORAL_FAN)));
    public static final Block BRAIN_CORAL_WALL_FAN = register("brain_coral_wall_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.PINK).noCollision().breakInstantly().dropsLike(BRAIN_CORAL_FAN)));
    public static final Block DEAD_BUBBLE_CORAL_WALL_FAN = register("dead_bubble_coral_wall_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly().dropsLike(DEAD_BUBBLE_CORAL_FAN)));
    public static final Block BUBBLE_CORAL_WALL_FAN = register("bubble_coral_wall_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.PURPLE).noCollision().breakInstantly().dropsLike(BUBBLE_CORAL_FAN)));
    public static final Block DEAD_FIRE_CORAL_WALL_FAN = register("dead_fire_coral_wall_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly().dropsLike(DEAD_FIRE_CORAL_FAN)));
    public static final Block FIRE_CORAL_WALL_FAN = register("fire_coral_wall_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.RED).noCollision().breakInstantly().dropsLike(FIRE_CORAL_FAN)));
    public static final Block DEAD_HORN_CORAL_WALL_FAN = register("dead_horn_coral_wall_fan", new Block(BlockSettings.of(Material.STONE, MapColor.GRAY).requiresTool().noCollision().breakInstantly().dropsLike(DEAD_HORN_CORAL_FAN)));
    public static final Block HORN_CORAL_WALL_FAN = register("horn_coral_wall_fan", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.YELLOW).noCollision().breakInstantly().dropsLike(HORN_CORAL_FAN)));
    public static final Block SEA_PICKLE = register("sea_pickle", new Block(BlockSettings.of(Material.UNDERWATER_PLANT, MapColor.GREEN).nonOpaque()));
    public static final Block BLUE_ICE = register("blue_ice", new Block(BlockSettings.of(Material.DENSE_ICE).strength(2.8f).slipperiness(0.989f)));
    public static final Block CONDUIT = register("conduit", new Block(BlockSettings.of(Material.GLASS, MapColor.DIAMOND_BLUE).strength(3.0f).luminance(15).nonOpaque()));
    public static final Block BAMBOO_SAPLING = register("bamboo_sapling", new Block(BlockSettings.of(Material.BAMBOO_SAPLING).ticksRandomly().breakInstantly().noCollision().strength(1.0f)));
    public static final Block BAMBOO = register("bamboo", new Block(BlockSettings.of(Material.BAMBOO, MapColor.DARK_GREEN).ticksRandomly().breakInstantly().strength(1.0f).nonOpaque().dynamicBounds()));
    public static final Block POTTED_BAMBOO = register("potted_bamboo", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block VOID_AIR = register("void_air", new Block(BlockSettings.of(Material.AIR).noCollision().air()));
    public static final Block CAVE_AIR = register("cave_air", new Block(BlockSettings.of(Material.AIR).noCollision().air()));
    public static final Block BUBBLE_COLUMN = register("bubble_column", new Block(BlockSettings.of(Material.BUBBLE_COLUMN).noCollision()));
    public static final Block POLISHED_GRANITE_STAIRS = register("polished_granite_stairs", new Block(BlockSettings.copy(POLISHED_GRANITE)));
    public static final Block SMOOTH_RED_SANDSTONE_STAIRS = register("smooth_red_sandstone_stairs", new Block(BlockSettings.copy(SMOOTH_RED_SANDSTONE)));
    public static final Block MOSSY_STONE_BRICK_STAIRS = register("mossy_stone_brick_stairs", new Block(BlockSettings.copy(MOSSY_STONE_BRICKS)));
    public static final Block POLISHED_DIORITE_STAIRS = register("polished_diorite_stairs", new Block(BlockSettings.copy(POLISHED_DIORITE)));
    public static final Block MOSSY_COBBLESTONE_STAIRS = register("mossy_cobblestone_stairs", new Block(BlockSettings.copy(MOSSY_COBBLESTONE)));
    public static final Block END_STONE_BRICK_STAIRS = register("end_stone_brick_stairs", new Block(BlockSettings.copy(END_STONE_BRICKS)));
    public static final Block STONE_STAIRS = register("stone_stairs", new Block(BlockSettings.copy(STONE)));
    public static final Block SMOOTH_SANDSTONE_STAIRS = register("smooth_sandstone_stairs", new Block(BlockSettings.copy(SMOOTH_SANDSTONE)));
    public static final Block SMOOTH_QUARTZ_STAIRS = register("smooth_quartz_stairs", new Block(BlockSettings.copy(SMOOTH_QUARTZ)));
    public static final Block GRANITE_STAIRS = register("granite_stairs", new Block(BlockSettings.copy(GRANITE)));
    public static final Block ANDESITE_STAIRS = register("andesite_stairs", new Block(BlockSettings.copy(ANDESITE)));
    public static final Block RED_NETHER_BRICK_STAIRS = register("red_nether_brick_stairs", new Block(BlockSettings.copy(RED_NETHER_BRICKS)));
    public static final Block POLISHED_ANDESITE_STAIRS = register("polished_andesite_stairs", new Block(BlockSettings.copy(POLISHED_ANDESITE)));
    public static final Block DIORITE_STAIRS = register("diorite_stairs", new Block(BlockSettings.copy(DIORITE)));
    public static final Block POLISHED_GRANITE_SLAB = register("polished_granite_slab", new Block(BlockSettings.copy(POLISHED_GRANITE)));
    public static final Block SMOOTH_RED_SANDSTONE_SLAB = register("smooth_red_sandstone_slab", new Block(BlockSettings.copy(SMOOTH_RED_SANDSTONE)));
    public static final Block MOSSY_STONE_BRICK_SLAB = register("mossy_stone_brick_slab", new Block(BlockSettings.copy(MOSSY_STONE_BRICKS)));
    public static final Block POLISHED_DIORITE_SLAB = register("polished_diorite_slab", new Block(BlockSettings.copy(POLISHED_DIORITE)));
    public static final Block MOSSY_COBBLESTONE_SLAB = register("mossy_cobblestone_slab", new Block(BlockSettings.copy(MOSSY_COBBLESTONE)));
    public static final Block END_STONE_BRICK_SLAB = register("end_stone_brick_slab", new Block(BlockSettings.copy(END_STONE_BRICKS)));
    public static final Block SMOOTH_SANDSTONE_SLAB = register("smooth_sandstone_slab", new Block(BlockSettings.copy(SMOOTH_SANDSTONE)));
    public static final Block SMOOTH_QUARTZ_SLAB = register("smooth_quartz_slab", new Block(BlockSettings.copy(SMOOTH_QUARTZ)));
    public static final Block GRANITE_SLAB = register("granite_slab", new Block(BlockSettings.copy(GRANITE)));
    public static final Block ANDESITE_SLAB = register("andesite_slab", new Block(BlockSettings.copy(ANDESITE)));
    public static final Block RED_NETHER_BRICK_SLAB = register("red_nether_brick_slab", new Block(BlockSettings.copy(RED_NETHER_BRICKS)));
    public static final Block POLISHED_ANDESITE_SLAB = register("polished_andesite_slab", new Block(BlockSettings.copy(POLISHED_ANDESITE)));
    public static final Block DIORITE_SLAB = register("diorite_slab", new Block(BlockSettings.copy(DIORITE)));
    public static final Block BRICK_WALL = register("brick_wall", new Block(BlockSettings.copy(BRICKS)));
    public static final Block PRISMARINE_WALL = register("prismarine_wall", new Block(BlockSettings.copy(PRISMARINE)));
    public static final Block RED_SANDSTONE_WALL = register("red_sandstone_wall", new Block(BlockSettings.copy(RED_SANDSTONE)));
    public static final Block MOSSY_STONE_BRICK_WALL = register("mossy_stone_brick_wall", new Block(BlockSettings.copy(MOSSY_STONE_BRICKS)));
    public static final Block GRANITE_WALL = register("granite_wall", new Block(BlockSettings.copy(GRANITE)));
    public static final Block STONE_BRICK_WALL = register("stone_brick_wall", new Block(BlockSettings.copy(STONE_BRICKS)));
    public static final Block MUD_BRICK_WALL = register("mud_brick_wall", new Block(BlockSettings.copy(MUD_BRICKS)));
    public static final Block NETHER_BRICK_WALL = register("nether_brick_wall", new Block(BlockSettings.copy(NETHER_BRICKS)));
    public static final Block ANDESITE_WALL = register("andesite_wall", new Block(BlockSettings.copy(ANDESITE)));
    public static final Block RED_NETHER_BRICK_WALL = register("red_nether_brick_wall", new Block(BlockSettings.copy(RED_NETHER_BRICKS)));
    public static final Block SANDSTONE_WALL = register("sandstone_wall", new Block(BlockSettings.copy(SANDSTONE)));
    public static final Block END_STONE_BRICK_WALL = register("end_stone_brick_wall", new Block(BlockSettings.copy(END_STONE_BRICKS)));
    public static final Block DIORITE_WALL = register("diorite_wall", new Block(BlockSettings.copy(DIORITE)));
    public static final Block SCAFFOLDING = register("scaffolding", new Block(BlockSettings.of(Material.DECORATION, MapColor.PALE_YELLOW).noCollision().dynamicBounds()));
    public static final Block LOOM = register("loom", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block BARREL = register("barrel", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block SMOKER = register("smoker", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.5f).luminance(13)));
    public static final Block BLAST_FURNACE = register("blast_furnace", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.5f).luminance(13)));
    public static final Block CARTOGRAPHY_TABLE = register("cartography_table", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block FLETCHING_TABLE = register("fletching_table", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block GRINDSTONE = register("grindstone", new Block(BlockSettings.of(Material.REPAIR_STATION, MapColor.IRON_GRAY).requiresTool().strength(2.0f, 6.0f)));
    public static final Block LECTERN = register("lectern", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block SMITHING_TABLE = register("smithing_table", new Block(BlockSettings.of(Material.WOOD).strength(2.5f)));
    public static final Block STONECUTTER = register("stonecutter", new Block(BlockSettings.of(Material.STONE).requiresTool().strength(3.5f)));
    public static final Block BELL = register("bell", new Block(BlockSettings.of(Material.METAL, MapColor.GOLD).requiresTool().strength(5.0f)));
    public static final Block LANTERN = register("lantern", new Block(BlockSettings.of(Material.METAL).requiresTool().strength(3.5f).luminance(15).nonOpaque()));
    public static final Block SOUL_LANTERN = register("soul_lantern", new Block(BlockSettings.of(Material.METAL).requiresTool().strength(3.5f).luminance(10).nonOpaque()));
    public static final Block CAMPFIRE = register("campfire", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(2.0f).luminance(15).nonOpaque()));
    public static final Block SOUL_CAMPFIRE = register("soul_campfire", new Block(BlockSettings.of(Material.WOOD, MapColor.SPRUCE_BROWN).strength(2.0f).luminance(10).nonOpaque()));
    public static final Block SWEET_BERRY_BUSH = register("sweet_berry_bush", new Block(BlockSettings.of(Material.PLANT).ticksRandomly().noCollision()));
    public static final Block WARPED_STEM = register("warped_stem", Blocks.createNetherStemBlock(MapColor.DARK_AQUA));
    public static final Block STRIPPED_WARPED_STEM = register("stripped_warped_stem", Blocks.createNetherStemBlock(MapColor.DARK_AQUA));
    public static final Block WARPED_HYPHAE = register("warped_hyphae", new Block(BlockSettings.of(Material.NETHER_WOOD, MapColor.DARK_DULL_PINK).strength(2.0f)));
    public static final Block STRIPPED_WARPED_HYPHAE = register("stripped_warped_hyphae", new Block(BlockSettings.of(Material.NETHER_WOOD, MapColor.DARK_DULL_PINK).strength(2.0f)));
    public static final Block WARPED_NYLIUM = register("warped_nylium", new Block(BlockSettings.of(Material.STONE, MapColor.TEAL).requiresTool().strength(0.4f).ticksRandomly()));
    public static final Block WARPED_FUNGUS = register("warped_fungus", new Block(BlockSettings.of(Material.PLANT, MapColor.CYAN).breakInstantly().noCollision()));
    public static final Block WARPED_WART_BLOCK = register("warped_wart_block", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.BRIGHT_TEAL).strength(1.0f)));
    public static final Block WARPED_ROOTS = register("warped_roots", new Block(BlockSettings.of(Material.NETHER_SHOOTS, MapColor.CYAN).noCollision().breakInstantly()));
    public static final Block NETHER_SPROUTS = register("nether_sprouts", new Block(BlockSettings.of(Material.NETHER_SHOOTS, MapColor.CYAN).noCollision().breakInstantly()));
    public static final Block CRIMSON_STEM = register("crimson_stem", Blocks.createNetherStemBlock(MapColor.DULL_PINK));
    public static final Block STRIPPED_CRIMSON_STEM = register("stripped_crimson_stem", Blocks.createNetherStemBlock(MapColor.DULL_PINK));
    public static final Block CRIMSON_HYPHAE = register("crimson_hyphae", new Block(BlockSettings.of(Material.NETHER_WOOD, MapColor.DARK_CRIMSON).strength(2.0f)));
    public static final Block STRIPPED_CRIMSON_HYPHAE = register("stripped_crimson_hyphae", new Block(BlockSettings.of(Material.NETHER_WOOD, MapColor.DARK_CRIMSON).strength(2.0f)));
    public static final Block CRIMSON_NYLIUM = register("crimson_nylium", new Block(BlockSettings.of(Material.STONE, MapColor.DULL_RED).requiresTool().strength(0.4f).ticksRandomly()));
    public static final Block CRIMSON_FUNGUS = register("crimson_fungus", new Block(BlockSettings.of(Material.PLANT, MapColor.DARK_RED).breakInstantly().noCollision()));
    public static final Block SHROOMLIGHT = register("shroomlight", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.RED).strength(1.0f).luminance(15)));
    public static final Block WEEPING_VINES = register("weeping_vines", new Block(BlockSettings.of(Material.PLANT, MapColor.DARK_RED).ticksRandomly().noCollision().breakInstantly()));
    public static final Block WEEPING_VINES_PLANT = register("weeping_vines_plant", new Block(BlockSettings.of(Material.PLANT, MapColor.DARK_RED).noCollision().breakInstantly()));
    public static final Block TWISTING_VINES = register("twisting_vines", new Block(BlockSettings.of(Material.PLANT, MapColor.CYAN).ticksRandomly().noCollision().breakInstantly()));
    public static final Block TWISTING_VINES_PLANT = register("twisting_vines_plant", new Block(BlockSettings.of(Material.PLANT, MapColor.CYAN).noCollision().breakInstantly()));
    public static final Block CRIMSON_ROOTS = register("crimson_roots", new Block(BlockSettings.of(Material.NETHER_SHOOTS, MapColor.DARK_RED).noCollision().breakInstantly()));
    public static final Block CRIMSON_PLANKS = register("crimson_planks", new Block(BlockSettings.of(Material.NETHER_WOOD, MapColor.DULL_PINK).strength(2.0f, 3.0f)));
    public static final Block WARPED_PLANKS = register("warped_planks", new Block(BlockSettings.of(Material.NETHER_WOOD, MapColor.DARK_AQUA).strength(2.0f, 3.0f)));
    public static final Block CRIMSON_SLAB = register("crimson_slab", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block WARPED_SLAB = register("warped_slab", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block CRIMSON_PRESSURE_PLATE = register("crimson_pressure_plate", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block WARPED_PRESSURE_PLATE = register("warped_pressure_plate", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).noCollision().strength(0.5f)));
    public static final Block CRIMSON_FENCE = register("crimson_fence", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block WARPED_FENCE = register("warped_fence", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block CRIMSON_TRAPDOOR = register("crimson_trapdoor", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block WARPED_TRAPDOOR = register("warped_trapdoor", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block CRIMSON_FENCE_GATE = register("crimson_fence_gate", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block WARPED_FENCE_GATE = register("warped_fence_gate", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).strength(2.0f, 3.0f)));
    public static final Block CRIMSON_STAIRS = register("crimson_stairs", new Block(BlockSettings.copy(CRIMSON_PLANKS)));
    public static final Block WARPED_STAIRS = register("warped_stairs", new Block(BlockSettings.copy(WARPED_PLANKS)));
    public static final Block CRIMSON_BUTTON = register("crimson_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block WARPED_BUTTON = register("warped_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block CRIMSON_DOOR = register("crimson_door", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block WARPED_DOOR = register("warped_door", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).strength(3.0f).nonOpaque()));
    public static final Block CRIMSON_SIGN = register("crimson_sign", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).noCollision().strength(1.0f)));
    public static final Block CRIMSON_WALL_SIGN = register("crimson_wall_sign", new Block(BlockSettings.of(Material.NETHER_WOOD, CRIMSON_PLANKS.getSettings().getMapColor()).noCollision().strength(1.0f).dropsLike(CRIMSON_SIGN)));
    public static final Block WARPED_SIGN = register("warped_sign", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).noCollision().strength(1.0f)));
    public static final Block WARPED_WALL_SIGN = register("warped_wall_sign", new Block(BlockSettings.of(Material.NETHER_WOOD, WARPED_PLANKS.getSettings().getMapColor()).noCollision().strength(1.0f).dropsLike(WARPED_SIGN)));
    public static final Block STRUCTURE_BLOCK = register("structure_block", new Block(BlockSettings.of(Material.METAL, MapColor.LIGHT_GRAY).requiresTool().strength(-1.0f, 3600000.0f)));
    public static final Block JIGSAW = register("jigsaw", new Block(BlockSettings.of(Material.METAL, MapColor.LIGHT_GRAY).requiresTool().strength(-1.0f, 3600000.0f)));
    public static final Block COMPOSTER = register("composter", new Block(BlockSettings.of(Material.WOOD).strength(0.6f)));
    public static final Block TARGET = register("target", new Block(BlockSettings.of(Material.SOLID_ORGANIC, MapColor.OFF_WHITE).strength(0.5f)));
    public static final Block BEE_NEST = register("bee_nest", new Block(BlockSettings.of(Material.WOOD, MapColor.YELLOW).strength(0.3f)));
    public static final Block BEEHIVE = register("beehive", new Block(BlockSettings.of(Material.WOOD).strength(0.6f)));
    public static final Block HONEY_BLOCK = register("honey_block", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT, MapColor.ORANGE).velocityMultiplier(0.4f).jumpVelocityMultiplier(0.5f).nonOpaque()));
    public static final Block HONEYCOMB_BLOCK = register("honeycomb_block", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT, MapColor.ORANGE).strength(0.6f)));
    public static final Block NETHERITE_BLOCK = register("netherite_block", new Block(BlockSettings.of(Material.METAL, MapColor.BLACK).requiresTool().strength(50.0f, 1200.0f)));
    public static final Block ANCIENT_DEBRIS = register("ancient_debris", new Block(BlockSettings.of(Material.METAL, MapColor.BLACK).requiresTool().strength(30.0f, 1200.0f)));
    public static final Block CRYING_OBSIDIAN = register("crying_obsidian", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(50.0f, 1200.0f).luminance(10)));
    public static final Block RESPAWN_ANCHOR = register("respawn_anchor", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(50.0f, 1200.0f).luminance(15)));
    public static final Block POTTED_CRIMSON_FUNGUS = register("potted_crimson_fungus", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_WARPED_FUNGUS = register("potted_warped_fungus", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_CRIMSON_ROOTS = register("potted_crimson_roots", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_WARPED_ROOTS = register("potted_warped_roots", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block LODESTONE = register("lodestone", new Block(BlockSettings.of(Material.REPAIR_STATION).requiresTool().strength(3.5f)));
    public static final Block BLACKSTONE = register("blackstone", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().strength(1.5f, 6.0f)));
    public static final Block BLACKSTONE_STAIRS = register("blackstone_stairs", new Block(BlockSettings.copy(BLACKSTONE)));
    public static final Block BLACKSTONE_WALL = register("blackstone_wall", new Block(BlockSettings.copy(BLACKSTONE)));
    public static final Block BLACKSTONE_SLAB = register("blackstone_slab", new Block(BlockSettings.copy(BLACKSTONE).strength(2.0f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE = register("polished_blackstone", new Block(BlockSettings.copy(BLACKSTONE).strength(2.0f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE_BRICKS = register("polished_blackstone_bricks", new Block(BlockSettings.copy(POLISHED_BLACKSTONE).strength(1.5f, 6.0f)));
    public static final Block CRACKED_POLISHED_BLACKSTONE_BRICKS = register("cracked_polished_blackstone_bricks", new Block(BlockSettings.copy(POLISHED_BLACKSTONE_BRICKS)));
    public static final Block POLISHED_BLACKSTONE_BRICK_SLAB = register("polished_blackstone_brick_slab", new Block(BlockSettings.copy(POLISHED_BLACKSTONE_BRICKS).strength(2.0f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE_BRICK_STAIRS = register("polished_blackstone_brick_stairs", new Block(BlockSettings.copy(POLISHED_BLACKSTONE_BRICKS)));
    public static final Block POLISHED_BLACKSTONE_BRICK_WALL = register("polished_blackstone_brick_wall", new Block(BlockSettings.copy(POLISHED_BLACKSTONE_BRICKS)));
    public static final Block CHISELED_POLISHED_BLACKSTONE = register("chiseled_polished_blackstone", new Block(BlockSettings.copy(POLISHED_BLACKSTONE).strength(1.5f, 6.0f)));
    public static final Block POLISHED_BLACKSTONE_STAIRS = register("polished_blackstone_stairs", new Block(BlockSettings.copy(POLISHED_BLACKSTONE)));
    public static final Block POLISHED_BLACKSTONE_SLAB = register("polished_blackstone_slab", new Block(BlockSettings.copy(POLISHED_BLACKSTONE)));
    public static final Block POLISHED_BLACKSTONE_WALL = register("polished_blackstone_wall", new Block(BlockSettings.copy(POLISHED_BLACKSTONE)));
    public static final Block GILDED_BLACKSTONE = register("gilded_blackstone", new Block(BlockSettings.copy(BLACKSTONE)));
    public static final Block POLISHED_BLACKSTONE_PRESSURE_PLATE = register("polished_blackstone_pressure_plate", new Block(BlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().noCollision().strength(0.5f)));
    public static final Block POLISHED_BLACKSTONE_BUTTON = register("polished_blackstone_button", new Block(BlockSettings.of(Material.DECORATION).noCollision().strength(0.5f)));
    public static final Block CHISELED_NETHER_BRICKS = register("chiseled_nether_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block CRACKED_NETHER_BRICKS = register("cracked_nether_bricks", new Block(BlockSettings.of(Material.STONE, MapColor.DARK_RED).requiresTool().strength(2.0f, 6.0f)));
    public static final Block QUARTZ_BRICKS = register("quartz_bricks", new Block(BlockSettings.copy(QUARTZ_BLOCK)));
    public static final Block CANDLE = register("candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.PALE_YELLOW).nonOpaque().strength(0.1f)));
    public static final Block WHITE_CANDLE = register("white_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.WHITE_GRAY).nonOpaque().strength(0.1f)));
    public static final Block ORANGE_CANDLE = register("orange_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.ORANGE).nonOpaque().strength(0.1f)));
    public static final Block MAGENTA_CANDLE = register("magenta_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.MAGENTA).nonOpaque().strength(0.1f)));
    public static final Block LIGHT_BLUE_CANDLE = register("light_blue_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.LIGHT_BLUE).nonOpaque().strength(0.1f)));
    public static final Block YELLOW_CANDLE = register("yellow_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.YELLOW).nonOpaque().strength(0.1f)));
    public static final Block LIME_CANDLE = register("lime_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.LIME).nonOpaque().strength(0.1f)));
    public static final Block PINK_CANDLE = register("pink_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.PINK).nonOpaque().strength(0.1f)));
    public static final Block GRAY_CANDLE = register("gray_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.GRAY).nonOpaque().strength(0.1f)));
    public static final Block LIGHT_GRAY_CANDLE = register("light_gray_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.LIGHT_GRAY).nonOpaque().strength(0.1f)));
    public static final Block CYAN_CANDLE = register("cyan_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.CYAN).nonOpaque().strength(0.1f)));
    public static final Block PURPLE_CANDLE = register("purple_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.PURPLE).nonOpaque().strength(0.1f)));
    public static final Block BLUE_CANDLE = register("blue_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.BLUE).nonOpaque().strength(0.1f)));
    public static final Block BROWN_CANDLE = register("brown_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.BROWN).nonOpaque().strength(0.1f)));
    public static final Block GREEN_CANDLE = register("green_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.GREEN).nonOpaque().strength(0.1f)));
    public static final Block RED_CANDLE = register("red_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.RED).nonOpaque().strength(0.1f)));
    public static final Block BLACK_CANDLE = register("black_candle", new Block(BlockSettings.of(Material.DECORATION, MapColor.BLACK).nonOpaque().strength(0.1f)));
    public static final Block CANDLE_CAKE = register("candle_cake", new Block(BlockSettings.copy(CAKE).luminance(3)));
    public static final Block WHITE_CANDLE_CAKE = register("white_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block ORANGE_CANDLE_CAKE = register("orange_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block MAGENTA_CANDLE_CAKE = register("magenta_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block LIGHT_BLUE_CANDLE_CAKE = register("light_blue_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block YELLOW_CANDLE_CAKE = register("yellow_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block LIME_CANDLE_CAKE = register("lime_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block PINK_CANDLE_CAKE = register("pink_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block GRAY_CANDLE_CAKE = register("gray_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block LIGHT_GRAY_CANDLE_CAKE = register("light_gray_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block CYAN_CANDLE_CAKE = register("cyan_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block PURPLE_CANDLE_CAKE = register("purple_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block BLUE_CANDLE_CAKE = register("blue_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block BROWN_CANDLE_CAKE = register("brown_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block GREEN_CANDLE_CAKE = register("green_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block RED_CANDLE_CAKE = register("red_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block BLACK_CANDLE_CAKE = register("black_candle_cake", new Block(BlockSettings.copy(CANDLE_CAKE)));
    public static final Block AMETHYST_BLOCK = register("amethyst_block", new Block(BlockSettings.of(Material.AMETHYST, MapColor.PURPLE).strength(1.5f).requiresTool()));
    public static final Block BUDDING_AMETHYST = register("budding_amethyst", new Block(BlockSettings.of(Material.AMETHYST).ticksRandomly().strength(1.5f).requiresTool()));
    public static final Block AMETHYST_CLUSTER = register("amethyst_cluster", new Block(BlockSettings.of(Material.AMETHYST).nonOpaque().ticksRandomly().strength(1.5f).luminance(5)));
    public static final Block LARGE_AMETHYST_BUD = register("large_amethyst_bud", new Block(BlockSettings.copy(AMETHYST_CLUSTER).luminance(4)));
    public static final Block MEDIUM_AMETHYST_BUD = register("medium_amethyst_bud", new Block(BlockSettings.copy(AMETHYST_CLUSTER).luminance(2)));
    public static final Block SMALL_AMETHYST_BUD = register("small_amethyst_bud", new Block(BlockSettings.copy(AMETHYST_CLUSTER).luminance(1)));
    public static final Block TUFF = register("tuff", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_GRAY).requiresTool().strength(1.5f, 6.0f)));
    public static final Block CALCITE = register("calcite", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_WHITE).requiresTool().strength(0.75f)));
    public static final Block TINTED_GLASS = register("tinted_glass", new Block(BlockSettings.copy(GLASS).mapColor(MapColor.GRAY).nonOpaque()));
    public static final Block POWDER_SNOW = register("powder_snow", new Block(BlockSettings.of(Material.POWDER_SNOW).strength(0.25f).dynamicBounds()));
    public static final Block SCULK_SENSOR = register("sculk_sensor", new Block(BlockSettings.of(Material.SCULK, MapColor.CYAN).strength(1.5f).luminance(1)));
    public static final Block SCULK = register("sculk", new Block(BlockSettings.of(Material.SCULK).strength(0.2f)));
    public static final Block SCULK_VEIN = register("sculk_vein", new Block(BlockSettings.of(Material.SCULK).noCollision().strength(0.2f)));
    public static final Block SCULK_CATALYST = register("sculk_catalyst", new Block(BlockSettings.of(Material.SCULK).strength(3.0f, 3.0f).luminance(6)));
    public static final Block SCULK_SHRIEKER = register("sculk_shrieker", new Block(BlockSettings.of(Material.SCULK, MapColor.BLACK).strength(3.0f, 3.0f)));
    public static final Block OXIDIZED_COPPER = register("oxidized_copper", new Block(BlockSettings.of(Material.METAL, MapColor.TEAL).requiresTool().strength(3.0f, 6.0f)));
    public static final Block WEATHERED_COPPER = register("weathered_copper", new Block(BlockSettings.of(Material.METAL, MapColor.DARK_AQUA).requiresTool().strength(3.0f, 6.0f)));
    public static final Block EXPOSED_COPPER = register("exposed_copper", new Block(BlockSettings.of(Material.METAL, MapColor.TERRACOTTA_LIGHT_GRAY).requiresTool().strength(3.0f, 6.0f)));
    public static final Block COPPER_BLOCK = register("copper_block", new Block(BlockSettings.of(Material.METAL, MapColor.ORANGE).requiresTool().strength(3.0f, 6.0f)));
    public static final Block COPPER_ORE = register("copper_ore", new Block(BlockSettings.copy(IRON_ORE)));
    public static final Block DEEPSLATE_COPPER_ORE = register("deepslate_copper_ore", new Block(BlockSettings.copy(COPPER_ORE).mapColor(MapColor.DEEPSLATE_GRAY).strength(4.5f, 3.0f)));
    public static final Block OXIDIZED_CUT_COPPER = register("oxidized_cut_copper", new Block(BlockSettings.copy(OXIDIZED_COPPER)));
    public static final Block OXIDIZED_CUT_COPPER_STAIRS = register("oxidized_cut_copper_stairs", new Block(BlockSettings.copy(OXIDIZED_CUT_COPPER)));
    public static final Block OXIDIZED_CUT_COPPER_SLAB = register("oxidized_cut_copper_slab", new Block(BlockSettings.copy(OXIDIZED_CUT_COPPER).requiresTool()));
    public static final Block WEATHERED_CUT_COPPER = register("weathered_cut_copper", new Block(BlockSettings.copy(WEATHERED_COPPER)));
    public static final Block WEATHERED_CUT_COPPER_STAIRS = register("weathered_cut_copper_stairs", new Block(BlockSettings.copy(WEATHERED_COPPER)));
    public static final Block WEATHERED_CUT_COPPER_SLAB = register("weathered_cut_copper_slab", new Block(BlockSettings.copy(WEATHERED_CUT_COPPER).requiresTool()));
    public static final Block EXPOSED_CUT_COPPER = register("exposed_cut_copper", new Block(BlockSettings.copy(EXPOSED_COPPER)));
    public static final Block EXPOSED_CUT_COPPER_STAIRS = register("exposed_cut_copper_stairs", new Block(BlockSettings.copy(EXPOSED_COPPER)));
    public static final Block EXPOSED_CUT_COPPER_SLAB = register("exposed_cut_copper_slab", new Block(BlockSettings.copy(EXPOSED_CUT_COPPER).requiresTool()));
    public static final Block CUT_COPPER = register("cut_copper", new Block(BlockSettings.copy(COPPER_BLOCK)));
    public static final Block CUT_COPPER_STAIRS = register("cut_copper_stairs", new Block(BlockSettings.copy(COPPER_BLOCK)));
    public static final Block CUT_COPPER_SLAB = register("cut_copper_slab", new Block(BlockSettings.copy(CUT_COPPER).requiresTool()));
    public static final Block WAXED_COPPER_BLOCK = register("waxed_copper_block", new Block(BlockSettings.copy(COPPER_BLOCK)));
    public static final Block WAXED_WEATHERED_COPPER = register("waxed_weathered_copper", new Block(BlockSettings.copy(WEATHERED_COPPER)));
    public static final Block WAXED_EXPOSED_COPPER = register("waxed_exposed_copper", new Block(BlockSettings.copy(EXPOSED_COPPER)));
    public static final Block WAXED_OXIDIZED_COPPER = register("waxed_oxidized_copper", new Block(BlockSettings.copy(OXIDIZED_COPPER)));
    public static final Block WAXED_OXIDIZED_CUT_COPPER = register("waxed_oxidized_cut_copper", new Block(BlockSettings.copy(OXIDIZED_COPPER)));
    public static final Block WAXED_OXIDIZED_CUT_COPPER_STAIRS = register("waxed_oxidized_cut_copper_stairs", new Block(BlockSettings.copy(OXIDIZED_COPPER)));
    public static final Block WAXED_OXIDIZED_CUT_COPPER_SLAB = register("waxed_oxidized_cut_copper_slab", new Block(BlockSettings.copy(WAXED_OXIDIZED_CUT_COPPER).requiresTool()));
    public static final Block WAXED_WEATHERED_CUT_COPPER = register("waxed_weathered_cut_copper", new Block(BlockSettings.copy(WEATHERED_COPPER)));
    public static final Block WAXED_WEATHERED_CUT_COPPER_STAIRS = register("waxed_weathered_cut_copper_stairs", new Block(BlockSettings.copy(WEATHERED_COPPER)));
    public static final Block WAXED_WEATHERED_CUT_COPPER_SLAB = register("waxed_weathered_cut_copper_slab", new Block(BlockSettings.copy(WAXED_WEATHERED_CUT_COPPER).requiresTool()));
    public static final Block WAXED_EXPOSED_CUT_COPPER = register("waxed_exposed_cut_copper", new Block(BlockSettings.copy(EXPOSED_COPPER)));
    public static final Block WAXED_EXPOSED_CUT_COPPER_STAIRS = register("waxed_exposed_cut_copper_stairs", new Block(BlockSettings.copy(EXPOSED_COPPER)));
    public static final Block WAXED_EXPOSED_CUT_COPPER_SLAB = register("waxed_exposed_cut_copper_slab", new Block(BlockSettings.copy(WAXED_EXPOSED_CUT_COPPER).requiresTool()));
    public static final Block WAXED_CUT_COPPER = register("waxed_cut_copper", new Block(BlockSettings.copy(COPPER_BLOCK)));
    public static final Block WAXED_CUT_COPPER_STAIRS = register("waxed_cut_copper_stairs", new Block(BlockSettings.copy(COPPER_BLOCK)));
    public static final Block WAXED_CUT_COPPER_SLAB = register("waxed_cut_copper_slab", new Block(BlockSettings.copy(WAXED_CUT_COPPER).requiresTool()));
    public static final Block LIGHTNING_ROD = register("lightning_rod", new Block(BlockSettings.of(Material.METAL, MapColor.ORANGE).requiresTool().strength(3.0f, 6.0f).nonOpaque()));
    public static final Block POINTED_DRIPSTONE = register("pointed_dripstone", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_BROWN).nonOpaque().ticksRandomly().strength(1.5f, 3.0f).dynamicBounds()));
    public static final Block DRIPSTONE_BLOCK = register("dripstone_block", new Block(BlockSettings.of(Material.STONE, MapColor.TERRACOTTA_BROWN).requiresTool().strength(1.5f, 1.0f)));
    public static final Block CAVE_VINES = register("cave_vines", new Block(BlockSettings.of(Material.PLANT).ticksRandomly().noCollision().luminance(14).breakInstantly()));
    public static final Block CAVE_VINES_PLANT = register("cave_vines_plant", new Block(BlockSettings.of(Material.PLANT).noCollision().luminance(14).breakInstantly()));
    public static final Block SPORE_BLOSSOM = register("spore_blossom", new Block(BlockSettings.of(Material.PLANT).breakInstantly().noCollision()));
    public static final Block AZALEA = register("azalea", new Block(BlockSettings.of(Material.PLANT).breakInstantly().nonOpaque()));
    public static final Block FLOWERING_AZALEA = register("flowering_azalea", new Block(BlockSettings.of(Material.PLANT).breakInstantly().nonOpaque()));
    public static final Block MOSS_CARPET = register("moss_carpet", new Block(BlockSettings.of(Material.PLANT, MapColor.GREEN).strength(0.1f)));
    public static final Block MOSS_BLOCK = register("moss_block", new Block(BlockSettings.of(Material.MOSS_BLOCK, MapColor.GREEN).strength(0.1f)));
    public static final Block BIG_DRIPLEAF = register("big_dripleaf", new Block(BlockSettings.of(Material.PLANT).strength(0.1f)));
    public static final Block BIG_DRIPLEAF_STEM = register("big_dripleaf_stem", new Block(BlockSettings.of(Material.PLANT).noCollision().strength(0.1f)));
    public static final Block SMALL_DRIPLEAF = register("small_dripleaf", new Block(BlockSettings.of(Material.PLANT).noCollision().breakInstantly()));
    public static final Block HANGING_ROOTS = register("hanging_roots", new Block(BlockSettings.of(Material.REPLACEABLE_PLANT, MapColor.DIRT_BROWN).noCollision().breakInstantly()));
    public static final Block ROOTED_DIRT = register("rooted_dirt", new Block(BlockSettings.of(Material.SOIL, MapColor.DIRT_BROWN).strength(0.5f)));
    public static final Block MUD = register("mud", new Block(BlockSettings.copy(DIRT).mapColor(MapColor.TERRACOTTA_CYAN)));
    public static final Block DEEPSLATE = register("deepslate", new Block(BlockSettings.of(Material.STONE, MapColor.DEEPSLATE_GRAY).requiresTool().strength(3.0f, 6.0f)));
    public static final Block COBBLED_DEEPSLATE = register("cobbled_deepslate", new Block(BlockSettings.copy(DEEPSLATE).strength(3.5f, 6.0f)));
    public static final Block COBBLED_DEEPSLATE_STAIRS = register("cobbled_deepslate_stairs", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block COBBLED_DEEPSLATE_SLAB = register("cobbled_deepslate_slab", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block COBBLED_DEEPSLATE_WALL = register("cobbled_deepslate_wall", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block POLISHED_DEEPSLATE = register("polished_deepslate", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block POLISHED_DEEPSLATE_STAIRS = register("polished_deepslate_stairs", new Block(BlockSettings.copy(POLISHED_DEEPSLATE)));
    public static final Block POLISHED_DEEPSLATE_SLAB = register("polished_deepslate_slab", new Block(BlockSettings.copy(POLISHED_DEEPSLATE)));
    public static final Block POLISHED_DEEPSLATE_WALL = register("polished_deepslate_wall", new Block(BlockSettings.copy(POLISHED_DEEPSLATE)));
    public static final Block DEEPSLATE_TILES = register("deepslate_tiles", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block DEEPSLATE_TILE_STAIRS = register("deepslate_tile_stairs", new Block(BlockSettings.copy(DEEPSLATE_TILES)));
    public static final Block DEEPSLATE_TILE_SLAB = register("deepslate_tile_slab", new Block(BlockSettings.copy(DEEPSLATE_TILES)));
    public static final Block DEEPSLATE_TILE_WALL = register("deepslate_tile_wall", new Block(BlockSettings.copy(DEEPSLATE_TILES)));
    public static final Block CRACKED_DEEPSLATE_TILES = register("cracked_deepslate_tiles", new Block(BlockSettings.copy(DEEPSLATE_TILES)));
    public static final Block DEEPSLATE_BRICKS = register("deepslate_bricks", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block DEEPSLATE_BRICK_STAIRS = register("deepslate_brick_stairs", new Block(BlockSettings.copy(DEEPSLATE_BRICKS)));
    public static final Block DEEPSLATE_BRICK_SLAB = register("deepslate_brick_slab", new Block(BlockSettings.copy(DEEPSLATE_BRICKS)));
    public static final Block DEEPSLATE_BRICK_WALL = register("deepslate_brick_wall", new Block(BlockSettings.copy(DEEPSLATE_BRICKS)));
    public static final Block CRACKED_DEEPSLATE_BRICKS = register("cracked_deepslate_bricks", new Block(BlockSettings.copy(DEEPSLATE_BRICKS)));
    public static final Block CHISELED_DEEPSLATE = register("chiseled_deepslate", new Block(BlockSettings.copy(COBBLED_DEEPSLATE)));
    public static final Block INFESTED_DEEPSLATE = register("infested_deepslate", new Block(BlockSettings.of(Material.ORGANIC_PRODUCT, MapColor.DEEPSLATE_GRAY)));
    public static final Block SMOOTH_BASALT = register("smooth_basalt", new Block(BlockSettings.copy(BASALT)));
    public static final Block RAW_IRON_BLOCK = register("raw_iron_block", new Block(BlockSettings.of(Material.STONE, MapColor.RAW_IRON_PINK).requiresTool().strength(5.0f, 6.0f)));
    public static final Block RAW_COPPER_BLOCK = register("raw_copper_block", new Block(BlockSettings.of(Material.STONE, MapColor.ORANGE).requiresTool().strength(5.0f, 6.0f)));
    public static final Block RAW_GOLD_BLOCK = register("raw_gold_block", new Block(BlockSettings.of(Material.STONE, MapColor.GOLD).requiresTool().strength(5.0f, 6.0f)));
    public static final Block POTTED_AZALEA_BUSH = register("potted_azalea_bush", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block POTTED_FLOWERING_AZALEA_BUSH = register("potted_flowering_azalea_bush", new Block(BlockSettings.of(Material.DECORATION).breakInstantly().nonOpaque()));
    public static final Block OCHRE_FROGLIGHT = register("ochre_froglight", new Block(BlockSettings.of(Material.FROGLIGHT, MapColor.PALE_YELLOW).strength(0.3f).luminance(15)));
    public static final Block VERDANT_FROGLIGHT = register("verdant_froglight", new Block(BlockSettings.of(Material.FROGLIGHT, MapColor.LICHEN_GREEN).strength(0.3f).luminance(15)));
    public static final Block PEARLESCENT_FROGLIGHT = register("pearlescent_froglight", new Block(BlockSettings.of(Material.FROGLIGHT, MapColor.PINK).strength(0.3f).luminance(15)));
    public static final Block FROGSPAWN = register("frogspawn", new Block(BlockSettings.of(Material.FROGSPAWN).breakInstantly().nonOpaque().noCollision()));
    public static final Block REINFORCED_DEEPSLATE = register("reinforced_deepslate", new Block(BlockSettings.of(Material.STONE, MapColor.DEEPSLATE_GRAY).strength(55.0f, 1200.0f)));

    public static void init() {
        for (Block block : Registry.BLOCKS) {
//            for (BlockState blockState : ) {
            addBlock(block);
//            }
//            block.getLootTableId();
        }
    }

    private static int id = 0;
    private static void addBlock(Block block) {
        Block.STATE_IDS.add(block.defaultState);
        block.defaultState.setId(id);
        id++;
    }

    private static BedBlock createBedBlock(DyeColor color) {
        return new BedBlock(color, BlockSettings.of(Material.WOOL, color.getMapColor()).strength(0.2f).nonOpaque());
    }

    private static PillarBlock createLogBlock(MapColor topMapColor, MapColor sideMapColor) {
        return new PillarBlock(BlockSettings.of(Material.WOOD, sideMapColor).strength(2.0f));
    }

    private static Block createNetherStemBlock(MapColor mapColor) {
        return new Block(BlockSettings.of(Material.NETHER_WOOD, mapColor).strength(2.0f));
    }

    private static StainedGlassBlock createStainedGlassBlock(DyeColor color) {
        return new StainedGlassBlock(color, BlockSettings.of(Material.GLASS, color).strength(0.3f).nonOpaque());
    }

    private static LeavesBlock createLeavesBlock() {
        return new LeavesBlock(BlockSettings.of(Material.LEAVES).strength(0.2f).ticksRandomly().nonOpaque());
    }

    private static ShulkerBoxBlock createShulkerBoxBlock(DyeColor color, BlockSettings settings) {
        return new ShulkerBoxBlock(color, settings.strength(2.0f).dynamicBounds().nonOpaque());
    }

    private static PistonBlock createPistonBlock(boolean sticky) {
        return new PistonBlock(sticky, BlockSettings.of(Material.PISTON).strength(1.5f));
    }

    private static Block register(String id, Block block) {
        return Registry.registerBlock(id, block);
    }
}

